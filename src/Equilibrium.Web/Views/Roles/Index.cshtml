@using Equilibrium.Web.Helpers
@using Equilibrium.Web.Models.Commons
@using Equilibrium.Web.Models.Role
@model IEnumerable<RoleModel>

@{
    ViewData["Title"] = "Perfis";
}

<div class="d-flex justify-content-end mb-3">
    @if (User.IsInRole("Admin") || await PermissionHelper.HasPermissionAsync(Context, "roles.create"))
    {
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus me-2"></i>Novo Perfil
        </a>
    }
</div>

<div class="card shadow mb-4">
    <partial name="_Partials/Commons/_CardHeader" model='(
        Title: "Perfis",
        BadgeText: "",
        BadgeClass: "",
        Icon: "fa-user-tag",
        CollapseTarget: "")' />
    <div class="card-body">
        @if (Model != null && Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-bordered table-hover datatable">
                    <thead>
                        <tr>
                            <th>Nome</th>
                            <th>Descrição</th>
                            <th>Data de Criação</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.Name</td>
                                <td>@(string.IsNullOrEmpty(item.Description) ? "-" : item.Description)</td>
                                <td>@item.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                                <td>
                                    @{
                                        var canEdit = User.IsInRole("Admin") || await PermissionHelper.HasPermissionAsync(Context, "roles.edit");
                                        var canDelete = User.IsInRole("Admin") || await PermissionHelper.HasPermissionAsync(Context, "roles.delete");
                                        var canManagePermissions = User.IsInRole("Admin") || await PermissionHelper.HasPermissionAsync(Context, "permissions.manage");

                                        var deleteConfig = canDelete ? new DeleteButtonModel(item.Id, "Roles", "perfil", item.Name, true) : null;

                                        var extraButton = canManagePermissions
                                        ? $"<a asp-action=\"ManagePermissions\" asp-route-id=\"{item.Id}\" class=\"btn btn-sm btn-success\" title=\"Gerenciar permissões\"><i class=\"fas fa-key\"></i></a>"
                                        : "";
                                    }
                                    <partial name="_Partials/Commons/_ActionButtons" model='(
                                                Id: item.Id,
                                                CanView: true,
                                                CanEdit: canEdit,
                                                CanDelete: canDelete,
                                                ControllerName: "Roles",
                                                DeleteConfig: deleteConfig,
                                                ExtraButtons: extraButton)' />
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <partial name="_Partials/Commons/_EmptyState" model='(
                Message: "Nenhum perfil encontrado.",
                Icon: "fa-user-tag",
                ButtonText: User.IsInRole("Admin") || await PermissionHelper.HasPermissionAsync(Context, "roles.create") ? "Criar Novo Perfil" : "",
                ButtonUrl: Url.Action("Create"),
                ButtonIcon: "fa-plus",
                IsAlert: true)' />
        }
    </div>
</div>