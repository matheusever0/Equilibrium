@model IEnumerable<CreditCardModel>
@using Equilibrium.Web.Helpers
@using Equilibrium.Web.Models.CreditCard
@{
    ViewData["Title"] = "Cartões de Crédito";
}

@section Styles {
    <link rel="stylesheet" href="~/css/pages/creditcards.css" asp-append-version="true">
}

<div class="container-fluid">
    <div class="d-flex justify-content-end mb-3">
        @if (await PermissionHelper.HasPermissionAsync(Context, "creditcards.create"))
        {
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus me-1"></i> Novo Cartão de Crédito
            </a>
        }
    </div>

    @if (!Model.Any())
    {
        <partial name="_Partials/Commons/_EmptyState" model='(
            Message: "Nenhum cartão de crédito cadastrado.",
            Icon: "fa-credit-card",
            ButtonText: await PermissionHelper.HasPermissionAsync(Context, "creditcards.create") ? "Adicionar Cartão de Crédito" : "",
            ButtonUrl: Url.Action("Create"),
            ButtonIcon: "fa-plus",
            IsAlert: true)' />
    }
    else
    {
        <div class="row">
            @foreach (var card in Model)
            {
                var usedPercentage = (card.Limit - card.AvailableLimit) / card.Limit * 100;
                var colorClass = usedPercentage > 75 ? "danger" : (usedPercentage > 50 ? "warning" : "success");

                <div class="col-xl-4 col-md-6 mb-4">
                    <div class="card shadow h-100 border-left-primary">
                        <div class="card-header py-3 d-flex justify-content-between align-items-center">
                            <h6 class="m-0 font-weight-bold text-primary">
                                <i class="fas fa-credit-card me-2"></i>@card.Name
                            </h6>
                            <span class="badge bg-primary">@card.CardBrand</span>
                        </div>
                        <div class="card-body">
                            <div class="d-flex flex-column h-100">
                                <div class="mb-3">
                                    <div class="text-xs font-weight-bold text-muted mb-1">Terminado em @card.LastFourDigits</div>
                                    <div class="text-xs text-muted">Fecha dia @card.ClosingDay / Vence dia @card.DueDay</div>
                                </div>

                                <div class="mb-3">
                                    <div class="text-xs font-weight-bold text-@colorClass text-uppercase mb-1">
                                        Limite Utilizado (@usedPercentage.ToString("0")%)
                                    </div>
                                    <div class="progress mb-1" style="height: 8px;">
                                        <div class="progress-bar bg-@colorClass" style="width: @usedPercentage.ToString("0")%"></div>
                                    </div>
                                    <div class="text-xs text-muted mt-1">@card.GetFormattedUsedLimit()</div>
                                </div>

                                <div class="row mb-3">
                                    <div class="col-6">
                                        <div class="small text-muted">Limite Total</div>
                                        <div class="font-weight-bold">@card.GetFormattedLimit()</div>
                                    </div>
                                    <div class="col-6">
                                        <div class="small text-muted">Disponível</div>
                                        <div class="font-weight-bold">@card.GetFormattedAvailableLimit()</div>
                                    </div>
                                </div>

                                <div class="d-flex justify-content-center mt-auto">
                                    <partial name="_Partials/Commons/_ActionButtons" model='(
                                        Id: card.Id,
                                        CanView: true,
                                        CanEdit: await PermissionHelper.HasPermissionAsync(Context, "creditcards.edit"),
                                        CanDelete: await PermissionHelper.HasPermissionAsync(Context, "creditcards.delete"),
                                        ControllerName: "CreditCards")' />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>