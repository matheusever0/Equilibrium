<!-- CurrentInvoice.cshtml -->
@model CreditCardInvoiceModel
@using Equilibrium.Web.Helpers
@using Equilibrium.Web.Models.CreditCard
@{
    ViewData["Title"] = "Fatura Atual - " + ViewBag.CreditCard?.Name;
    var card = ViewBag.CreditCard as CreditCardModel;
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>
            <i class="fas fa-file-invoice-dollar me-2"></i>
            Fatura Atual - @card?.Name
        </h2>
        <div>
            <partial name="_Partials/Commons/_BackButton" model='(Action: "Details", Controller: "CreditCards", Text: "Voltar ao Cartão")' />
            <a asp-action="InvoiceHistory" asp-route-id="@card?.Id" class="btn btn-info">
                <i class="fas fa-history me-1"></i> Histórico
            </a>
        </div>
    </div>

    <!-- Status da Fatura -->
    <div class="row mb-4">
        <div class="col-md-12">
            @if (Model.IsOverdue)
            {
                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Fatura Vencida!</strong> Vencimento em @Model.GetFormattedDueDate()
                </div>
            }
            else if (Model.IsPaid)
            {
                <div class="alert alert-success">
                    <i class="fas fa-check-circle me-2"></i>
                    <strong>Fatura Paga!</strong> Quitada integralmente.
                </div>
            }
            else
            {
                <div class="alert alert-warning">
                    <i class="fas fa-clock me-2"></i>
                    <strong>Fatura Pendente.</strong> Vence em @Model.GetFormattedDueDate()
                </div>
            }
        </div>
    </div>

    <div class="row">
        <!-- Resumo da Fatura -->
        <div class="col-lg-8">
            <div class="card shadow mb-4">
                <partial name="_Partials/Commons/_CardHeader" model='(
                    Title: "Resumo da Fatura",
                    BadgeText: Model.IsPaid ? "Paga" : "Pendente",
                    BadgeClass: Model.IsPaid ? "bg-success" : "bg-warning",
                    Icon: "fa-file-invoice",
                    CollapseTarget: "")' />
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <partial name="_Partials/Commons/_FinancialDataItem" model='(
                                Label: "Valor Total",
                                Value: Model.GetFormattedTotalAmount(),
                                SecondaryText: "",
                                ValueClass: "fw-bold text-primary fs-4")' />

                            <partial name="_Partials/Commons/_FinancialDataItem" model='(
                                Label: "Valor Pendente",
                                Value: Model.GetFormattedRemainingAmount(),
                                SecondaryText: "",
                                ValueClass: "fw-bold text-danger")' />

                            <partial name="_Partials/Commons/_FinancialDataItem" model='(
                                Label: "Data de Vencimento",
                                Value: Model.GetFormattedDueDate(),
                                SecondaryText: "",
                                ValueClass: "")' />
                        </div>
                        <div class="col-md-6">
                            <partial name="_Partials/Commons/_FinancialDataItem" model='(
                                Label: "Transações",
                                Value: Model.TransactionCount + " lançamentos",
                                SecondaryText: "",
                                ValueClass: "")' />

                            <partial name="_Partials/Commons/_FinancialDataItem" model='(
                                Label: "Período",
                                Value: Model.ClosingDate.ToString("dd/MM/yyyy") + " - " + Model.ReferenceDate.ToString("dd/MM/yyyy"),
                                SecondaryText: "",
                                ValueClass: "")' />

                            <!-- Uso do Limite -->
                            <div class="mb-3">
                                <h6 class="small font-weight-bold text-muted">Uso do Limite (@Model.UsagePercentage.ToString("0")%)</h6>
                                <div class="progress mb-2">
                                    <div class="progress-bar @(Model.UsagePercentage > 80 ? "bg-danger" : Model.UsagePercentage > 60 ? "bg-warning" : "bg-success")"
                                         style="width: @Model.UsagePercentage.ToString("0")%"></div>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <small>Usado: @string.Format("{0:C2}", Model.UsedLimit)</small>
                                    <small>Disponível: @string.Format("{0:C2}", Model.AvailableLimit)</small>
                                </div>
                            </div>
                        </div>
                    </div>

                    @if (!Model.IsPaid && Model.RemainingAmount > 0)
                    {
                        <div class="mt-4 text-center">
                            <button type="button" class="btn btn-success btn-lg" data-bs-toggle="modal" data-bs-target="#payInvoiceModal">
                                <i class="fas fa-money-bill-wave me-2"></i>
                                Pagar Fatura - @Model.GetFormattedRemainingAmount()
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Ações Rápidas -->
        <div class="col-lg-4">
            <div class="card shadow mb-4">
                <partial name="_Partials/Commons/_CardHeader" model='(
                    Title: "Ações",
                    BadgeText: "",
                    BadgeClass: "",
                    Icon: "fa-tools",
                    CollapseTarget: "")' />
                <div class="card-body">
                    <a asp-action="InvoiceDetails" asp-route-id="@card?.Id" class="btn btn-primary w-100 mb-3">
                        <i class="fas fa-list me-1"></i> Ver Detalhes
                    </a>

                    <a asp-action="InvoiceHistory" asp-route-id="@card?.Id" class="btn btn-info w-100 mb-3">
                        <i class="fas fa-history me-1"></i> Histórico de Faturas
                    </a>

                    <a asp-controller="Payments" asp-action="Create"
                       asp-route-creditCardId="@card?.Id"
                       asp-route-paymentMethodId="@card?.PaymentMethodId"
                       class="btn btn-success w-100">
                        <i class="fas fa-plus me-1"></i> Nova Compra
                    </a>
                </div>
            </div>

            <!-- Info do Cartão -->
            <div class="card shadow">
                <partial name="_Partials/Commons/_CardHeader" model='(
                    Title: "Informações do Cartão",
                    BadgeText: card?.CardBrand,
                    BadgeClass: "bg-primary",
                    Icon: "fa-credit-card",
                    CollapseTarget: "")' />
                <div class="card-body">
                    <partial name="_Partials/Commons/_FinancialDataItem" model='(
                        Label: "Limite Total",
                        Value: string.Format("{0:C2}", Model.TotalLimit),
                        SecondaryText: "",
                        ValueClass: "")' />

                    <partial name="_Partials/Commons/_FinancialDataItem" model='(
                        Label: "Fechamento",
                        Value: "Todo dia " + card?.ClosingDay,
                        SecondaryText: "",
                        ValueClass: "")' />

                    <partial name="_Partials/Commons/_FinancialDataItem" model='(
                        Label: "Vencimento",
                        Value: "Todo dia " + card?.DueDay,
                        SecondaryText: "",
                        ValueClass: "")' />
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal de Pagamento -->
<div class="modal fade" id="payInvoiceModal" tabindex="-1" aria-labelledby="payInvoiceModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="PayInvoice" asp-route-id="@card?.Id" method="post">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title">Pagar Fatura</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="Amount" class="form-label">Valor do Pagamento</label>
                        <div class="input-group">
                            <span class="input-group-text">R$</span>
                            <input type="number" id="Amount" name="Amount" class="form-control"
                                   step="0.01" min="0.01" max="@Model.RemainingAmount"
                                   value="@Model.RemainingAmount" required />
                        </div>
                        <div class="form-text">Valor pendente: @Model.GetFormattedRemainingAmount()</div>
                    </div>

                    <div class="mb-3">
                        <label for="PaymentDate" class="form-label">Data de Pagamento</label>
                        <input type="date" id="PaymentDate" name="PaymentDate" class="form-control"
                               value="@DateTime.Now.ToString("yyyy-MM-dd")" required />
                    </div>

                    <div class="mb-3">
                        <label for="Notes" class="form-label">Observações</label>
                        <textarea id="Notes" name="Notes" class="form-control" rows="2"
                                  placeholder="Observações sobre o pagamento..."></textarea>
                    </div>

                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="PayFullAmount" name="PayFullAmount" checked>
                        <label class="form-check-label" for="PayFullAmount">
                            Pagar valor total da fatura
                        </label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-success">
                        <i class="fas fa-money-bill-wave me-1"></i> Confirmar Pagamento
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const payFullCheckbox = document.getElementById('PayFullAmount');
            const amountInput = document.getElementById('Amount');
            const fullAmount = @Model.RemainingAmount;

            if (payFullCheckbox && amountInput) {
                payFullCheckbox.addEventListener('change', function() {
                    if (this.checked) {
                        amountInput.value = fullAmount;
                        amountInput.setAttribute('readonly', true);
                    } else {
                        amountInput.removeAttribute('readonly');
                    }
                });
            }
        });
    </script>
}