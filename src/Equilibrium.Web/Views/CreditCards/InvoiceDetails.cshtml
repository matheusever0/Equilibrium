@model CreditCardInvoiceDetailModel
@using Equilibrium.Web.Helpers
@using Equilibrium.Web.Models.CreditCard
@{
    ViewData["Title"] = "Detalhes da Fatura";
    var card = ViewBag.CreditCard as CreditCardModel;
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>
            <i class="fas fa-file-invoice me-2"></i>
            Detalhes da Fatura - @card?.Name
        </h2>
        <div>
            <partial name="_Partials/Commons/_BackButton" model='(Action: "CurrentInvoice", Controller: "CreditCards", Text: "Fatura Atual")' />
            <a asp-action="InvoiceHistory" asp-route-id="@card?.Id" class="btn btn-info">
                <i class="fas fa-history me-1"></i> Histórico
            </a>
        </div>
    </div>

    <!-- Resumo da Fatura -->
    <div class="row mb-4">
        <div class="col-lg-8">
            <div class="card shadow mb-4">
                <partial name="_Partials/Commons/_CardHeader" model='(
                    Title: "Resumo da Fatura",
                    BadgeText: Model.StatusDescription,
                    BadgeClass: Model.StatusBadgeClass,
                    Icon: "fa-file-invoice",
                    CollapseTarget: "")' />
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            <partial name="_Partials/Commons/_FinancialDataItem" model='(
                                Label: "Período",
                                Value: Model.GetFormattedClosingDate() + " - " + Model.GetFormattedReferenceDate(),
                                SecondaryText: "",
                                ValueClass: "")' />

                            <partial name="_Partials/Commons/_FinancialDataItem" model='(
                                Label: "Vencimento",
                                Value: Model.GetFormattedDueDate(),
                                SecondaryText: Model.IsOverdue ? "VENCIDA" : "",
                                ValueClass: Model.IsOverdue ? "text-danger fw-bold" : "")' />
                        </div>
                        <div class="col-md-4">
                            <partial name="_Partials/Commons/_FinancialDataItem" model='(
                                Label: "Valor Total",
                                Value: Model.GetFormattedTotalAmount(),
                                SecondaryText: "",
                                ValueClass: "fw-bold text-primary fs-5")' />

                            <partial name="_Partials/Commons/_FinancialDataItem" model='(
                                Label: "Valor Pago",
                                Value: Model.GetFormattedPaidAmount(),
                                SecondaryText: "",
                                ValueClass: "text-success")' />
                        </div>
                        <div class="col-md-4">
                            <partial name="_Partials/Commons/_FinancialDataItem" model='(
                                Label: "Valor Pendente",
                                Value: Model.GetFormattedRemainingAmount(),
                                SecondaryText: "",
                                ValueClass: "fw-bold text-danger fs-5")' />

                            <partial name="_Partials/Commons/_FinancialDataItem" model='(
                                Label: "Transações",
                                Value: Model.TransactionCount + " lançamentos",
                                SecondaryText: "",
                                ValueClass: "")' />
                        </div>
                    </div>

                    @if (Model.InterestCharges > 0 || Model.Fees > 0 || Model.Credits > 0)
                    {
                        <hr>
                        <h6 class="text-muted mb-3">Encargos e Ajustes</h6>
                        <div class="row">
                            @if (Model.InterestCharges > 0)
                            {
                                <div class="col-md-4">
                                    <partial name="_Partials/Commons/_FinancialDataItem" model='(
                                        Label: "Juros",
                                        Value: Model.GetFormattedInterestCharges(),
                                        SecondaryText: "",
                                        ValueClass: "text-danger")' />
                                </div>
                            }
                            @if (Model.Fees > 0)
                            {
                                <div class="col-md-4">
                                    <partial name="_Partials/Commons/_FinancialDataItem" model='(
                                        Label: "Taxas",
                                        Value: Model.GetFormattedFees(),
                                        SecondaryText: "",
                                        ValueClass: "text-warning")' />
                                </div>
                            }
                            @if (Model.Credits > 0)
                            {
                                <div class="col-md-4">
                                    <partial name="_Partials/Commons/_FinancialDataItem" model='(
                                        Label: "Créditos",
                                        Value: Model.GetFormattedCredits(),
                                        SecondaryText: "",
                                        ValueClass: "text-success")' />
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Ações Rápidas -->
        <div class="col-lg-4">
            <div class="card shadow mb-4">
                <partial name="_Partials/Commons/_CardHeader" model='(
                    Title: "Ações",
                    BadgeText: "",
                    BadgeClass: "",
                    Icon: "fa-tools",
                    CollapseTarget: "")' />
                <div class="card-body">
                    @if (!Model.IsPaid && Model.RemainingAmount > 0)
                    {
                        <button type="button" class="btn btn-success w-100 mb-3" data-bs-toggle="modal" data-bs-target="#payInvoiceModal">
                            <i class="fas fa-money-bill-wave me-1"></i>
                            Pagar - @Model.GetFormattedRemainingAmount()
                        </button>
                    }

                    <a asp-action="CurrentInvoice" asp-route-id="@card?.Id" class="btn btn-primary w-100 mb-3">
                        <i class="fas fa-file-invoice-dollar me-1"></i> Fatura Atual
                    </a>

                    <a asp-action="InvoiceHistory" asp-route-id="@card?.Id" class="btn btn-info w-100">
                        <i class="fas fa-history me-1"></i> Histórico Completo
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Transações da Fatura -->
        <div class="col-lg-8">
            @if (Model.Transactions.Any())
            {
                <div class="card shadow mb-4">
                    <partial name="_Partials/Commons/_CardHeader" model='(
                        Title: "Transações do Período",
                        BadgeText: Model.Transactions.Count().ToString(),
                        BadgeClass: "bg-info",
                        Icon: "fa-list",
                        CollapseTarget: "")' />
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-hover mb-0">
                                <thead class="bg-light">
                                    <tr>
                                        <th>Descrição</th>
                                        <th>Data</th>
                                        <th class="text-end">Valor</th>
                                        <th class="text-center">Status</th>
                                        <th class="text-center">Ações</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var transaction in Model.Transactions.OrderByDescending(t => t.DueDate))
                                    {
                                        <tr>
                                            <td>
                                                <strong>@transaction.Description</strong>
                                                @if (!string.IsNullOrEmpty(transaction.Notes))
                                                {
                                                    <br>

                                                    <small class="text-muted">@transaction.Notes</small>
                                                }
                                            </td>
                                            <td>@transaction.GetFormattedDueDate()</td>
                                            <td class="text-end fw-bold">@transaction.GetFormattedAmount()</td>
                                            <td class="text-center">
                                                <partial name="_Partials/Commons/_StatusBadge" model='(
                                                    BadgeClass: transaction.StatusBadgeClass,
                                                    Description: transaction.StatusDescription)' />
                                            </td>
                                            <td class="text-center">
                                                <a asp-controller="Payments" asp-action="Details" asp-route-id="@transaction.Id"
                                                   class="btn btn-sm btn-primary" title="Ver Detalhes">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <partial name="_Partials/Commons/_EmptyState" model='(
                    Message: "Nenhuma transação encontrada neste período.",
                    Icon: "fa-credit-card",
                    ButtonText: "Nova Compra",
                    ButtonUrl: Url.Action("Create", "Payments", new { creditCardId = card?.Id }),
                    ButtonIcon: "fa-plus",
                    IsAlert: true)' />
            }
        </div>

        <!-- Histórico de Pagamentos da Fatura -->
        <div class="col-lg-4">
            @if (Model.Payments.Any())
            {
                <div class="card shadow">
                    <partial name="_Partials/Commons/_CardHeader" model='(
                        Title: "Pagamentos Realizados",
                        BadgeText: Model.Payments.Count().ToString(),
                        BadgeClass: "bg-success",
                        Icon: "fa-money-bill",
                        CollapseTarget: "")' />
                    <div class="card-body p-0">
                        <div class="list-group list-group-flush">
                            @foreach (var payment in Model.Payments.OrderByDescending(p => p.PaymentDate))
                            {
                                <div class="list-group-item">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <h6 class="mb-1">@payment.GetFormattedAmount()</h6>
                                            <small class="text-muted">@payment.GetFormattedPaymentDate()</small>
                                        </div>
                                        <span class="badge bg-success">Pago</span>
                                    </div>
                                    @if (!string.IsNullOrEmpty(payment.Notes))
                                    {
                                        <p class="mb-1 mt-2">
                                            <small>@payment.Notes</small>
                                        </p>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
            else if (Model.IsPaid)
            {
                <div class="alert alert-success">
                    <i class="fas fa-check-circle me-2"></i>
                    Fatura paga integralmente.
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i>
                    Nenhum pagamento realizado ainda.
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal de Pagamento -->
@if (!Model.IsPaid && Model.RemainingAmount > 0)
{
    <div class="modal fade" id="payInvoiceModal" tabindex="-1" aria-labelledby="payInvoiceModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form asp-action="PayInvoice" asp-route-id="@card?.Id" method="post">
                    @Html.AntiForgeryToken()
                    <div class="modal-header">
                        <h5 class="modal-title">Pagar Fatura</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="Amount" class="form-label">Valor do Pagamento</label>
                            <div class="input-group">
                                <span class="input-group-text">R$</span>
                                <input type="number" id="Amount" name="Amount" class="form-control"
                                       step="0.01" min="0.01" max="@Model.RemainingAmount"
                                       value="@Model.RemainingAmount" required />
                            </div>
                            <div class="form-text">Valor pendente: @Model.GetFormattedRemainingAmount()</div>
                        </div>

                        <div class="mb-3">
                            <label for="PaymentDate" class="form-label">Data de Pagamento</label>
                            <input type="date" id="PaymentDate" name="PaymentDate" class="form-control"
                                   value="@DateTime.Now.ToString("yyyy-MM-dd")" required />
                        </div>

                        <div class="mb-3">
                            <label for="Notes" class="form-label">Observações</label>
                            <textarea id="Notes" name="Notes" class="form-control" rows="2"
                                      placeholder="Observações sobre o pagamento..."></textarea>
                        </div>

                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="PayFullAmount" name="PayFullAmount" checked>
                            <label class="form-check-label" for="PayFullAmount">
                                Pagar valor total da fatura
                            </label>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="submit" class="btn btn-success">
                            <i class="fas fa-money-bill-wave me-1"></i> Confirmar Pagamento
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const payFullCheckbox = document.getElementById('PayFullAmount');
            const amountInput = document.getElementById('Amount');
            const fullAmount = @Model.RemainingAmount;

            if (payFullCheckbox && amountInput) {
                payFullCheckbox.addEventListener('change', function() {
                    if (this.checked) {
                        amountInput.value = fullAmount;
                        amountInput.setAttribute('readonly', true);
                    } else {
                        amountInput.removeAttribute('readonly');
                    }
                });
            }
        });
    </script>
}