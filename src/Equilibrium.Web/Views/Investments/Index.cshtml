@using Equilibrium.Web.Helpers
@using Equilibrium.Web.Models.Investment
@model IEnumerable<InvestmentModel>

@{
    ViewData["Title"] = ViewBag.Title ?? "Investimentos";
}
<div class="container-fluid">
    <div class="d-flex justify-content-end mb-3">
        <div>
            @if (await PermissionHelper.HasPermissionAsync(Context, "investments.create"))
            {
                <a asp-action="Create" class="btn btn-primary">
                    <i class="fas fa-plus me-1"></i>Novo Investimento
                </a>
            }
            @if (await PermissionHelper.HasPermissionAsync(Context, "investments.edit"))
            {
                <form asp-action="RefreshAllPrices" method="post" class="d-inline">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-info">
                        <i class="fas fa-sync-alt me-1"></i>Atualizar Preços
                    </button>
                </form>
            }
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">Filtros</h6>
            <a data-bs-toggle="collapse" href="#collapseFilters" role="button" aria-expanded="true" aria-controls="collapseFilters">
                <i class="fas fa-chevron-down"></i>
            </a>
        </div>
        <div class="card-body collapse show" id="collapseFilters">
            <div class="row">
                <div class="col-12 mb-3">
                    <div class="d-flex flex-wrap gap-2">
                        <a asp-action="Index" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-list"></i> Todos
                        </a>
                        <a asp-action="ByType" asp-route-type="1" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-landmark"></i> Ações
                        </a>
                        <a asp-action="ByType" asp-route-type="2" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-building"></i> Fundos Imobiliários
                        </a>
                        <a asp-action="ByType" asp-route-type="3" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-money-check-dollar"></i> ETFs
                        </a>
                        <a asp-action="ByType" asp-route-type="4" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-money-bill-trend-up"></i> Ações Estrangeiras
                        </a>
                        <a asp-action="ByType" asp-route-type="5" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-money-bill"></i> Renda Fixa
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Seus Investimentos</h6>
        </div>
        <div class="card-body">
            @if (!Model.Any())
            {
                <div class="text-center my-5">
                    <i class="fas fa-chart-line fa-3x text-muted mb-3"></i>
                    <p>Nenhum investimento encontrado.</p>
                    @if (await PermissionHelper.HasPermissionAsync(Context, "investments.create"))
                    {
                        <a asp-action="Create" class="btn btn-primary mt-2">
                            <i class="fas fa-plus me-1"></i>Adicionar seu primeiro investimento
                        </a>
                    }
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-bordered table-hover datatable">
                        <thead class="bg-light">
                            <tr>
                                <th>Símbolo</th>
                                <th>Nome</th>
                                <th>Tipo</th>
                                <th class="text-center">Quantidade</th>
                                <th class="text-center">Preço Médio</th>
                                <th class="text-center">Preço Atual</th>
                                <th class="text-center">Total Investido</th>
                                <th class="text-center">Total Atual</th>
                                <th class="text-center">Ganho/Perda</th>
                                <th class="text-center">Ações</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var investment in Model)
                            {
                                <tr>
                                    <td>@investment.Symbol</td>
                                    <td>@investment.Name</td>
                                    <td>
                                        @{
                                            var typeDescription = investment.Type switch
                                            {
                                                1 => "Ações",
                                                2 => "Fundos Imobiliários",
                                                3 => "ETFs",
                                                4 => "Ações Estrangeiras",
                                                5 => "Renda Fixa",
                                                _ => "Não Categorizado"
                                            };
                                        }
                                        @typeDescription
                                    </td>
                                    <td class="text-center">@investment.TotalQuantity.ToString("N2")</td>
                                    <td class="text-center">@string.Format("{0:C2}", investment.AveragePrice)</td>
                                    <td class="text-center">@string.Format("{0:C2}", investment.CurrentPrice)</td>
                                    <td class="text-center">@string.Format("{0:C2}", investment.TotalInvested)</td>
                                    <td class="text-center">@string.Format("{0:C2}", investment.CurrentTotal)</td>
                                    <td class="text-center">
                                        @if (investment.GainLossPercentage > 0)
                                        {
                                            <span class="text-success">
                                                <i class="fas fa-arrow-up me-1"></i>
                                                @string.Format("{0:C2}", investment.GainLossValue) (@investment.GainLossPercentage.ToString("N2")%)
                                            </span>
                                        }
                                        else if (investment.GainLossPercentage < 0)
                                        {
                                            <span class="text-danger">
                                                <i class="fas fa-arrow-down me-1"></i>
                                                @string.Format("{0:C2}", investment.GainLossValue) (@investment.GainLossPercentage.ToString("N2")%)
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">
                                                @string.Format("{0:C2}", investment.GainLossValue) (0.00%)
                                            </span>
                                        }
                                    </td>
                                    <td class="text-center">
                                        <div class="btn-group">
                                            <a asp-action="Details" asp-route-id="@investment.Id" class="btn btn-sm btn-info">
                                                <i class="fas fa-info-circle me-1"></i>Detalhes
                                            </a>
                                            @if (await PermissionHelper.HasPermissionAsync(Context, "investments.delete"))
                                            {
                                                <a asp-action="Delete" asp-route-id="@investment.Id" class="btn btn-sm btn-danger">
                                                    <i class="fas fa-trash me-1"></i>Excluir
                                                </a>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <div class="mt-4">
                    <div class="card">
                        <div class="card-header">
                            <h6 class="m-0 font-weight-bold text-primary">Resumo do Portfólio</h6>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="card mb-3">
                                        <div class="card-body text-center">
                                            <h5 class="text-muted">Total Investido</h5>
                                            <h3 class="font-weight-bold">@string.Format("{0:C2}", Model.Sum(i => i.TotalInvested))</h3>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="card mb-3">
                                        <div class="card-body text-center">
                                            <h5 class="text-muted">Valor Atual</h5>
                                            <h3 class="font-weight-bold">@string.Format("{0:C2}", Model.Sum(i => i.CurrentTotal))</h3>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="card mb-3">
                                        <div class="card-body text-center">
                                            <h5 class="text-muted">Ganho/Perda Total</h5>
                                            @{
                                                var totalGain = Model.Sum(i => i.GainLossValue);
                                                var totalInvested = Model.Sum(i => i.TotalInvested);
                                                var totalPercentage = totalInvested > 0 ? (totalGain / totalInvested) * 100 : 0;
                                            }
                                            <h3 class="font-weight-bold @(totalGain > 0 ? "text-success" : totalGain < 0 ? "text-danger" : "text-muted")">
                                                @string.Format("{0:C2}", totalGain) (@totalPercentage.ToString("N2")%)
                                            </h3>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
