@using Equilibrium.Web.Helpers
@using Equilibrium.Web.Models.Investment
@model IEnumerable<InvestmentModel>

@{
    ViewData["Title"] = ViewBag.Title ?? "Investimentos";

    // Função helper para formatação de moeda
    string FormatCurrency(decimal value, string currency)
    {
        return currency == "BRL"
            ? string.Format("{0:C2}", value)
            : currency == "USD"
                ? $"$ {value:N2}"
                : currency == "EUR"
                    ? $"€ {value:N2}"
                    : currency == "GBP"
                        ? $"£ {value:N2}"
                        : $"{currency} {value:N2}";
    }

    // Agrupa investimentos por moeda para cálculos de resumo
    var investmentsByGroup = Model.GroupBy(i => i.Currency);
}

<div class="container-fluid">
    <div class="d-flex justify-content-end mb-3">
        <div>
            @if (await PermissionHelper.HasPermissionAsync(Context, "investments.create"))
            {
                <a asp-action="Create" class="btn btn-primary">
                    <i class="fas fa-plus me-1"></i>Novo Investimento
                </a>
            }
            @if (await PermissionHelper.HasPermissionAsync(Context, "investments.edit"))
            {
                <form asp-action="RefreshAllPrices" method="post" class="d-inline">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-info">
                        <i class="fas fa-sync-alt me-1"></i>Atualizar Preços
                    </button>
                </form>
            }
        </div>
    </div>

    <div class="card shadow mb-4">
        <partial name="_Partials/Commons/_CardHeader" model='(
            Title: "Filtros",
            BadgeText: "",
            BadgeClass: "",
            Icon: "fa-filter",
            CollapseTarget: "collapseFilters")' />
        <div class="card-body collapse show" id="collapseFilters">
            <div class="row">
                <div class="col-12 mb-3">
                    <div class="d-flex flex-wrap gap-2">
                        <a asp-action="Index" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-list"></i> Todos
                        </a>
                        <a asp-action="ByType" asp-route-type="1" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-landmark"></i> Ações
                        </a>
                        <a asp-action="ByType" asp-route-type="2" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-building"></i> Fundos Imobiliários
                        </a>
                        <a asp-action="ByType" asp-route-type="3" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-money-check-dollar"></i> ETFs
                        </a>
                        <a asp-action="ByType" asp-route-type="4" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-money-bill-trend-up"></i> Ações Estrangeiras
                        </a>
                        <a asp-action="ByType" asp-route-type="5" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-money-bill"></i> Renda Fixa
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (!Model.Any())
    {
        <partial name="_Partials/Commons/_EmptyState" model='(
            Message: "Nenhum investimento encontrado.",
            Icon: "fa-chart-line",
            ButtonText: await PermissionHelper.HasPermissionAsync(Context, "investments.create") ? "Adicionar seu primeiro investimento" : "",
            ButtonUrl: Url.Action("Create"),
            ButtonIcon: "fa-plus",
            IsAlert: false)' />
    }
    else
    {
        <!-- Resumo do Portfólio - Agora apresentado ANTES da tabela de investimentos -->
        @foreach (var group in investmentsByGroup)
        {
            <div class="card shadow mb-4">
                <partial name="_Partials/Commons/_CardHeader" model='(
                    Title: "Resumo - Investimentos em " + group.Key,
                    BadgeText: "",
                    BadgeClass: "",
                    Icon: "fa-chart-pie",
                    CollapseTarget: "")' />
                <div class="card-body">
                    <div class="row">
                        <partial name="_Partials/Commons/_MetricCard" model='(
                            Title: "Total Investido",
                            Value: FormatCurrency(group.Sum(i => i.TotalInvested), group.Key),
                            Icon: "fa-wallet",
                            Color: "primary",
                            SubValue: "",
                            ShowProgress: false)' />

                        <partial name="_Partials/Commons/_MetricCard" model='(
                            Title: "Valor Atual",
                            Value: FormatCurrency(group.Sum(i => i.CurrentTotal), group.Key),
                            Icon: "fa-chart-line",
                            Color: "info",
                            SubValue: "",
                            ShowProgress: false)' />

                        @{
                            var totalGain = group.Sum(i => i.GainLossValue);
                            var totalInvested = group.Sum(i => i.TotalInvested);
                            var totalPercentage = totalInvested > 0 ? (totalGain / totalInvested) * 100 : 0;
                            var cardClass = totalGain > 0 ? "success" : totalGain < 0 ? "danger" : "secondary";
                            var iconArrow = totalGain > 0 ? "fa-arrow-up" : totalGain < 0 ? "fa-arrow-down" : "";
                        }

                        <partial name="_Partials/Commons/_MetricCard" model='(
                            Title: "Ganho/Perda Total",
                            Value: $"{(totalGain > 0 ? "<i class=\"fas " + iconArrow + " me-1\"></i>" : totalGain < 0 ? "<i class=\"fas " + iconArrow + " me-1\"></i>" : "")}{FormatCurrency(totalGain, group.Key)} ({totalPercentage.ToString("N2")}%)",
                            Icon: "fa-percentage",
                            Color: cardClass,
                            SubValue: "",
                            ShowProgress: false)' />
                    </div>
                </div>
            </div>
        }

        <!-- Tabela de Investimentos -->
        <div class="card shadow mb-4">
            <partial name="_Partials/Commons/_CardHeader" model='(
                Title: "Seus Investimentos",
                BadgeText: "",
                BadgeClass: "",
                Icon: "fa-chart-line",
                CollapseTarget: "")' />
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-bordered table-hover datatable">
                        <thead class="bg-light">
                            <tr>
                                <th>Símbolo</th>
                                <th>Nome</th>
                                <th>Tipo</th>
                                <th>Moeda</th>
                                <th class="text-center">Quantidade</th>
                                <th class="text-center">Preço Médio</th>
                                <th class="text-center">Preço Atual</th>
                                <th class="text-center">Total Investido</th>
                                <th class="text-center">Total Atual</th>
                                <th class="text-center">Ganho/Perda</th>
                                <th class="text-center">Ações</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var investment in Model)
                            {
                                <tr>
                                    <td>@investment.Symbol</td>
                                    <td>@investment.Name</td>
                                    <td>
                                        @{
                                            var typeDescription = investment.Type switch
                                            {
                                                1 => "Ações",
                                                2 => "Fundos Imobiliários",
                                                3 => "ETFs",
                                                4 => "Ações Estrangeiras",
                                                5 => "Renda Fixa",
                                                _ => "Não Categorizado"
                                            };
                                        }
                                        @typeDescription
                                    </td>
                                    <td>@investment.Currency</td>
                                    <td class="text-center">@investment.TotalQuantity.ToString("N2")</td>
                                    <td class="text-center">@FormatCurrency(investment.AveragePrice, investment.Currency)</td>
                                    <td class="text-center">@FormatCurrency(investment.CurrentPrice, investment.Currency)</td>
                                    <td class="text-center">@FormatCurrency(investment.TotalInvested, investment.Currency)</td>
                                    <td class="text-center">@FormatCurrency(investment.CurrentTotal, investment.Currency)</td>
                                    <td class="text-center">
                                        @if (investment.GainLossPercentage > 0)
                                        {
                                            <span class="text-success">
                                                <i class="fas fa-arrow-up me-1"></i>
                                                @FormatCurrency(investment.GainLossValue, investment.Currency) (@investment.GainLossPercentage.ToString("N2")%)
                                            </span>
                                        }
                                        else if (investment.GainLossPercentage < 0)
                                        {
                                            <span class="text-danger">
                                                <i class="fas fa-arrow-down me-1"></i>
                                                @FormatCurrency(investment.GainLossValue, investment.Currency) (@investment.GainLossPercentage.ToString("N2")%)
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">
                                                @FormatCurrency(investment.GainLossValue, investment.Currency) (0.00%)
                                            </span>
                                        }
                                    </td>
                                    <td class="text-center">
                                        <partial name="_Partials/Commons/_ActionButtons" model='(
                                            Id: investment.Id,
                                            CanView: true,
                                            CanEdit: false,
                                            CanDelete: await PermissionHelper.HasPermissionAsync(Context, "investments.delete"),
                                            ControllerName: "Investments")' />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>