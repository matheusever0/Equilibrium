@using Microsoft.AspNetCore.Html
@using Equilibrium.Web.Models.PaymentMethod
@model PaymentMethodModel

@{
    ViewData["Title"] = "Excluir Método de Pagamento";

    var htmlBuilder = new System.Text.StringBuilder();

    htmlBuilder.AppendLine("<dl class='row'>");
    htmlBuilder.AppendLine($"<dt class='col-sm-3'>Nome</dt>");
    htmlBuilder.AppendLine($"<dd class='col-sm-9'>{Model.Name}</dd>");

    htmlBuilder.AppendLine($"<dt class='col-sm-3'>Tipo</dt>");
    htmlBuilder.AppendLine($"<dd class='col-sm-9'>{GetPaymentMethodTypeDescription(Model.Type)}</dd>");

    if (!string.IsNullOrEmpty(Model.Description))
    {
        htmlBuilder.AppendLine($"<dt class='col-sm-3'>Descrição</dt>");
        htmlBuilder.AppendLine($"<dd class='col-sm-9'>{Model.Description}</dd>");
    }

    htmlBuilder.AppendLine($"<dt class='col-sm-3'>Data de Criação</dt>");
    htmlBuilder.AppendLine($"<dd class='col-sm-9'>{Model.CreatedAt:dd/MM/yyyy HH:mm}</dd>");
    htmlBuilder.AppendLine("</dl>");

    if (Model.Type == 2 && Model.CreditCards.Any())
    {
        htmlBuilder.AppendLine("<div class='alert alert-warning mt-3'>");
        htmlBuilder.AppendLine("<i class='fas fa-exclamation-triangle me-2'></i>");
        htmlBuilder.AppendLine($"Este método de pagamento possui {Model.CreditCards.Count} cartões de crédito associados que também serão excluídos.");
        htmlBuilder.AppendLine("</div>");
    }

    htmlBuilder.AppendLine("<div class='alert alert-warning mt-3'>");
    htmlBuilder.AppendLine("<i class='fas fa-exclamation-circle'></i>");
    htmlBuilder.AppendLine("Se este método de pagamento estiver em uso por algum pagamento existente, a exclusão não será permitida.");
    htmlBuilder.AppendLine("</div>");

    IHtmlContent entityDetails = new HtmlString(htmlBuilder.ToString());
}

<div class="d-flex justify-content-end mb-3">
    <partial name="_Partials/Commons/_BackButton" model='(
        Action: "Details",
        Controller: "PaymentMethods",
        Text: "Voltar")' />
</div>

<partial name="_Partials/Commons/_DeleteConfirmation" model='(
    EntityName: "método de pagamento",
    Id: Guid.Parse(Model.Id),
    EntityDetails: entityDetails)' />

@functions {
    string GetPaymentMethodTypeDescription(int type)
    {
        return type switch
        {
            1 => "Dinheiro",
            2 => "Cartão de Crédito",
            3 => "Cartão de Débito",
            4 => "Transferência Bancária",
            5 => "Carteira Digital",
            6 => "Cheque",
            7 => "Outro",
            _ => "Desconhecido"
        };
    }
}
