@model IEnumerable<dynamic>
@using Equilibrium.Web.Helpers

@if (Model.Any())
{
    <div class="row">
        @foreach (var financing in Model)
        {
            <div class="col-lg-6 mb-4">
                <div class="card border">
                    <div class="card-header bg-primary text-white">
                        <div class="d-flex justify-content-between align-items-center">
                            <strong><i class="fas fa-calculator me-2"></i>@financing.Description</strong>
                            <span class="badge bg-light text-dark">@financing.StatusDescription</span>
                        </div>
                    </div>
                    
                    <div class="card-body">
                        <div class="row mb-3">
                            <div class="col-6">
                                <small class="text-muted text-uppercase fw-bold">VALOR TOTAL</small>
                                <h6 class="text-primary fw-bold">@string.Format("{0:C2}", financing.TotalAmount)</h6>
                            </div>
                            <div class="col-6">
                                <small class="text-muted text-uppercase fw-bold">VALOR RESTANTE</small>
                                <h6 class="text-danger fw-bold">@string.Format("{0:C2}", financing.RemainingAmount)</h6>
                            </div>
                        </div>

                        <div class="mb-3">
                            @{
                                var paymentValue = (decimal)(financing.PaymentPercentage ?? 0);
                                var paymentPercent = Math.Max(0, Math.Min(100, paymentValue));
                                var paymentPercentText = paymentPercent.ToString("F1");
                            }
                            
                            <div class="d-flex justify-content-between mb-1">
                                <small class="text-muted fw-bold">PROGRESSO DO PAGAMENTO</small>
                                <small class="fw-bold">@paymentPercentText%</small>
                            </div>
                            
                            <div class="progress">
                                <div class="progress-bar bg-success" 
                                     role="progressbar" 
                                     style="width: @paymentPercent.ToString(System.Globalization.CultureInfo.InvariantCulture)%"
                                     aria-valuenow="@paymentPercent" 
                                     aria-valuemin="0" 
                                     aria-valuemax="100">
                                </div>
                            </div>
                            <small class="text-muted">Pago: @string.Format("{0:C2}", financing.TotalPaid)</small>
                        </div>

                        <div class="mb-3">
                            @{
                                var timeValue = (decimal)(financing.TimeProgressPercentage ?? 0);
                                var timePercent = Math.Max(0, Math.Min(100, timeValue));
                                var timePercentText = timePercent.ToString("F1");
                            }
                            
                            <div class="d-flex justify-content-between mb-1">
                                <small class="text-muted fw-bold">TEMPO RESTANTE</small>
                                <small class="fw-bold">@timePercentText% decorrido</small>
                            </div>
                            
                            <div class="progress">
                                <div class="progress-bar bg-info" 
                                     role="progressbar" 
                                     style="width: @timePercent.ToString(System.Globalization.CultureInfo.InvariantCulture)%"
                                     aria-valuenow="@timePercent" 
                                     aria-valuemin="0" 
                                     aria-valuemax="100">
                                </div>
                            </div>
                            <small class="text-muted">
                                <i class="fas fa-clock"></i> @financing.RemainingTimeText
                            </small>
                        </div>

                        @if (financing.TotalInstallments != null && financing.TotalInstallments > 0)
                        {
                                var installmentValue = (decimal)(financing.InstallmentProgress ?? 0);
                                var installmentPercent = Math.Max(0, Math.Min(100, installmentValue));
                            
                            
                            <div class="mb-3">
                                <div class="d-flex justify-content-between mb-1">
                                    <small class="text-muted fw-bold">PARCELAS PAGAS</small>
                                    <small class="fw-bold">@financing.PaidInstallments / @financing.TotalInstallments</small>
                                </div>
                                
                                <div class="progress">
                                    <div class="progress-bar bg-warning" 
                                         role="progressbar" 
                                         style="width: @installmentPercent.ToString(System.Globalization.CultureInfo.InvariantCulture)%"
                                         aria-valuenow="@installmentPercent" 
                                         aria-valuemin="0" 
                                         aria-valuemax="100">
                                    </div>
                                </div>
                            </div>
                        }

                        @if (financing.NextInstallmentDate != null)
                        {
                            var nextDate = (DateTime)financing.NextInstallmentDate;
                            <div class="alert alert-info">
                                <div class="fw-bold">Próxima Parcela:</div>
                                <div>@nextDate.ToString("dd/MM/yyyy") - <strong>@string.Format("{0:C2}", financing.NextInstallmentAmount ?? 0)</strong></div>
                            </div>
                        }

                        <div class="border-top pt-2">
                            <div class="row text-center">
                                <div class="col-6">
                                    <small class="text-muted">Taxa: @string.Format("{0:F2}", financing.InterestRate)%</small>
                                </div>
                                <div class="col-6">
                                    <small class="text-muted">@financing.TypeDescription</small>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card-footer bg-light">
                        <div class="d-grid gap-2 d-md-flex">
                            @if (await PermissionHelper.HasPermissionAsync(Context, "financings.view"))
                            {
                                <a asp-controller="Financings" 
                                   asp-action="Details" 
                                   asp-route-id="@financing.Id" 
                                   class="btn btn-outline-primary btn-sm flex-md-fill">
                                    <i class="fas fa-eye"></i> Detalhes
                                </a>
                            }
                            
                            @if (await PermissionHelper.HasPermissionAsync(Context, "payments.create") && financing.Status == 1)
                            {
                                <a asp-controller="Payments" 
                                   asp-action="CreateWithFinancing" 
                                   asp-route-financingId="@financing.Id" 
                                   class="btn btn-success btn-sm flex-md-fill">
                                    <i class="fas fa-plus"></i> Pagar
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-secondary text-white">
                    <h6 class="mb-0"><i class="fas fa-chart-bar me-2"></i>Resumo Geral dos Financiamentos</h6>
                </div>
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-md-3 col-6 mb-2">
                            <h4 class="text-primary">@Model.Count()</h4>
                            <small class="text-muted">Financiamentos Ativos</small>
                        </div>
                        <div class="col-md-3 col-6 mb-2">
                            <h5 class="text-info">@string.Format("{0:C2}", Model.Sum(f => (decimal)f.TotalAmount))</h5>
                            <small class="text-muted">Valor Total</small>
                        </div>
                        <div class="col-md-3 col-6 mb-2">
                            <h5 class="text-success">@string.Format("{0:C2}", Model.Sum(f => (decimal)f.TotalPaid))</h5>
                            <small class="text-muted">Total Pago</small>
                        </div>
                        <div class="col-md-3 col-6 mb-2">
                            <h5 class="text-danger">@string.Format("{0:C2}", Model.Sum(f => (decimal)f.RemainingAmount))</h5>
                            <small class="text-muted">Total Restante</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="text-center py-5">
        <i class="fas fa-calculator fa-3x text-muted mb-3"></i>
        <h5 class="text-muted">Nenhum financiamento ativo</h5>
        <p class="text-muted">Você não possui financiamentos ativos no momento.</p>
        @if (await PermissionHelper.HasPermissionAsync(Context, "financings.create"))
        {
            <a asp-controller="Financings" asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus me-2"></i>Criar Primeiro Financiamento
            </a>
        }
    </div>
}