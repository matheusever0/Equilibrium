@model IEnumerable<PaymentModel>
@using Equilibrium.Web.Helpers
@using Equilibrium.Web.Models.Payment
@{
    ViewData["Title"] = ViewBag.Title ?? "Pagamentos";

    var currentMonth = ViewBag.Month ?? DateTime.Now.Month;
    var currentYear = ViewBag.Year ?? DateTime.Now.Year;

    var previousMonth = currentMonth == 1 ? 12 : currentMonth - 1;
    var previousYear = currentMonth == 1 ? currentYear - 1 : currentYear;

    var nextMonth = currentMonth == 12 ? 1 : currentMonth + 1;
    var nextYear = currentMonth == 12 ? currentYear + 1 : currentYear;
}

<div class="container-fluid">
    <div class="d-flex justify-content-end mb-3">
        @if (await PermissionHelper.HasPermissionAsync(Context, "payments.create"))
        {
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus me-1"></i> Novo Pagamento
            </a>
        }
    </div>

    <!-- Filtros -->
    <div class="card shadow mb-4">
        <partial name="_Partials/Commons/_CardHeader" model='(
            Title: "Filtros",
            BadgeText: "",
            BadgeClass: "",
            Icon: "fa-filter",
            CollapseTarget: "collapseFilters")' />
        <div class="card-body collapse show" id="collapseFilters">
            <div class="row">
                <div class="col-md-6 mb-3">
                    <div class="d-flex flex-wrap gap-2">
                        <a asp-action="Index" class="btn btn-outline-primary btn-sm @(ViewContext.RouteData.Values["action"].ToString() == "Index" && ViewBag.Title == null ? "active" : "")">
                            <i class="fas fa-list"></i> Todos
                        </a>
                        <a asp-action="Pending" class="btn btn-outline-warning btn-sm @(ViewContext.RouteData.Values["action"].ToString() == "Pending" ? "active" : "")">
                            <i class="fas fa-clock"></i> Pendentes
                        </a>
                        <a asp-action="Overdue" class="btn btn-outline-danger btn-sm @(ViewContext.RouteData.Values["action"].ToString() == "Overdue" ? "active" : "")">
                            <i class="fas fa-exclamation-triangle"></i> Vencidos
                        </a>
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <div class="d-flex flex-wrap justify-content-md-end gap-2">
                        <div class="btn-group">
                            <a asp-action="ByMonth" asp-route-month="@previousMonth" asp-route-year="@previousYear" class="btn btn-outline-secondary btn-sm">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                            <a asp-action="ByMonth" asp-route-month="@DateTime.Now.Month" asp-route-year="@DateTime.Now.Year"
                               class="btn btn-outline-primary btn-sm @(ViewContext.RouteData.Values["action"].ToString() == "ByMonth" && currentMonth == DateTime.Now.Month && currentYear == DateTime.Now.Year ? "active" : "")">
                                Mês Atual
                            </a>
                            <a asp-action="ByMonth" asp-route-month="@nextMonth" asp-route-year="@nextYear" class="btn btn-outline-secondary btn-sm">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (!Model.Any())
    {
        <partial name="_Partials/Commons/_EmptyState" model='(
            Message: "Nenhum pagamento encontrado.",
            Icon: "fa-money-bill-wave",
            ButtonText: await PermissionHelper.HasPermissionAsync(Context, "payments.create") ? "Criar Novo Pagamento" : "",
            ButtonUrl: Url.Action("Create"),
            ButtonIcon: "fa-plus",
            IsAlert: true)' />
    }
    else
    {
        <div class="row">
                <partial name="_Partials/Commons/_MetricCard" model='(
                    Title: "Total Geral",
                    Value: Model.Sum(p => p.Amount).ToString("C2"),
                    Icon: "fa-dollar-sign",
                    Color: "primary",
                    SubValue: Model.Count() + " pagamentos",
                    ShowProgress: false)' />
                <partial name="_Partials/Commons/_MetricCard" model='(
                    Title: "Total Pago",
                    Value: Model.Where(p => p.Status == 2).Sum(p => p.Amount).ToString("C2"),
                    Icon: "fa-check-circle",
                    Color: "success",
                    SubValue: Model.Count(p => p.Status == 2) + " pagos",
                    ShowProgress: false)' />
                <partial name="_Partials/Commons/_MetricCard" model='(
                    Title: "Total Pendente",
                    Value: Model.Where(p => p.Status == 1 || p.Status == 3).Sum(p => p.Amount).ToString("C2"),
                    Icon: "fa-exclamation-circle",
                    Color: "warning",
                    SubValue: Model.Count(p => p.Status == 1 || p.Status == 3) + " pendentes",
                    ShowProgress: false)' />
        </div>

        <div class="card shadow mb-4">
            <partial name="_Partials/Commons/_CardHeader" model='(
                Title: "Seus Pagamentos",
                BadgeText: "",
                BadgeClass: "",
                Icon: "fa-money-bill-wave",
                CollapseTarget: "")' />
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-bordered table-hover datatable">
                        <thead class="bg-light">
                            <tr>
                                <th>Descrição</th>
                                <th class="text-center">Vencimento</th>
                                <th class="text-end">Valor</th>
                                <th class="text-center">Status</th>
                                <th>Tipo</th>
                                <th>Método</th>
                                <th class="text-center">Ações</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.OrderBy(e => e.DueDate))
                            {
                                <tr>
                                    <td>
                                        <a asp-action="Details" asp-route-id="@item.Id">
                                            <div class="fw-medium">
                                                @if (item.IsRecurring)
                                                {
                                                    <span class="badge bg-info me-2" title="Pagamento Recorrente">
                                                        <i class="fas fa-sync-alt"></i>
                                                    </span>
                                                }
                                                @item.Description
                                            </div>
                                            <div class="small text-muted">
                                                @(item.Installments.Any() ? $"Parcelado ({item.Installments.Count}x)" : "Pagamento Único")
                                            </div>
                                        </a>
                                    </td>
                                    <td class="text-center">@item.GetFormattedDueDate()</td>
                                    <td class="text-end">@item.GetFormattedAmount()</td>
                                    <td class="text-center">
                                        <partial name="_Partials/Commons/_StatusBadge" model='(
                                            BadgeClass: item.StatusBadgeClass,
                                            Description: item.StatusDescription)' />
                                    </td>
                                    <td>@item.PaymentTypeName</td>
                                    <td>@item.PaymentMethodName</td>
                                    <td class="text-center">
                                        <partial name="_Partials/Commons/_ActionButtons" model='(
                                            Id: item.Id,
                                            CanView: true,
                                            CanEdit: await PermissionHelper.HasPermissionAsync(Context, "payments.edit"),
                                            CanDelete: await PermissionHelper.HasPermissionAsync(Context, "payments.delete"),
                                            ControllerName: "Payments")' />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>