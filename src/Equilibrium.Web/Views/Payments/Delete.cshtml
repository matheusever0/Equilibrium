@using Microsoft.AspNetCore.Components
@using Equilibrium.Web.Models.Payment
@model PaymentModel
@{
    ViewData["Title"] = "Excluir Pagamento";

    RenderFragment entityDetails = @<text>
        <div class="mb-3">
            <h6 class="small font-weight-bold text-muted">Descrição</h6>
            <p>@Model.Description</p>
        </div>
        <div class="mb-3">
            <h6 class="small font-weight-bold text-muted">Valor</h6>
            <p class="fw-bold">@Model.GetFormattedAmount()</p>
        </div>
        <div class="mb-3">
            <h6 class="small font-weight-bold text-muted">Data de Vencimento</h6>
            <p>@Model.GetFormattedDueDate()</p>
        </div>
        <div class="mb-3">
            <h6 class="small font-weight-bold text-muted">Tipo de Pagamento</h6>
            <p>@Model.PaymentTypeName</p>
        </div>
        <div class="mb-3">
            <h6 class="small font-weight-bold text-muted">Status</h6>
            <p><span class="badge @Model.StatusBadgeClass">@Model.StatusDescription</span></p>
        </div>

        @if (Model.Installments != null && Model.Installments.Any())
    {
        <div class="alert alert-warning">
            <i class="fas fa-exclamation-triangle me-2"></i> Este pagamento possui @Model.Installments.Count parcelas que também serão excluídas.
        </div>
    }
    </text>;
}

<div class="container-fluid">
    <div class="d-flex justify-content-end mb-3">
        <partial name="_Partials/Commons/_BackButton" model='(
            Action: "Details",
            Controller: "Payments",
            Text: "Voltar")' />
    </div>

    <partial name="_Partials/Commons/_DeleteConfirmation" model='(
        EntityName: "pagamento",
        Id: Guid.Parse(Model.Id),
        EntityDetails: entityDetails)' />
</div>