@using System.Text.Json
@using Equilibrium.Web.Models
@using Equilibrium.Web.Models.Generics
@using Equilibrium.Web.Models.Payment
@using Equilibrium.Web.Models.Income
@model IEnumerable<PaymentModel>
@{
    var currentMonth = ViewBag.Month;
    var currentYear = ViewBag.Year;

    var monthName = new DateTime(currentYear, currentMonth, 1).ToString("MMMM");
    var previousMonth = currentMonth == 1 ? 12 : currentMonth - 1;
    var previousYear = currentMonth == 1 ? currentYear - 1 : currentYear;
    var nextMonth = currentMonth == 12 ? 1 : currentMonth + 1;
    var nextYear = currentMonth == 12 ? currentYear + 1 : currentYear;

    var totalAmount = ViewBag.TotalAmount;
    var paidAmount = ViewBag.PaidAmount;
    var pendingAmount = ViewBag.PendingAmount;
    var overdueAmount = ViewBag.OverdueAmount;

    // Dados de receitas
    var totalIncomeAmount = ViewBag.TotalIncomeAmount;
    var receivedIncomeAmount = ViewBag.ReceivedIncomeAmount;
    var pendingIncomeAmount = ViewBag.PendingIncomeAmount;
    var overdueIncomeAmount = ViewBag.OverdueIncomeAmount;

    var paymentsByType = ViewBag.PaymentsByType as List<PaymentByTypeDto> ?? new List<PaymentByTypeDto>();
    var incomesByType = ViewBag.IncomesByType as List<PaymentByTypeDto> ?? new List<PaymentByTypeDto>();

    var jsonOptions = new JsonSerializerOptions
            { Encoder = System.Text.Encodings.Web.JavaScriptEncoder.UnsafeRelaxedJsonEscaping };

    var typeLabels = JsonSerializer.Serialize(paymentsByType.Select(p => p.TypeName).ToList(), jsonOptions);
    var typeValues = JsonSerializer.Serialize(paymentsByType.Select(p => p.TotalAmount).ToList(), jsonOptions);

    var incomeTypeLabels = JsonSerializer.Serialize(incomesByType.Select(p => p.TypeName).ToList(), jsonOptions);
    var incomeTypeValues = JsonSerializer.Serialize(incomesByType.Select(p => p.TotalAmount).ToList(), jsonOptions);

    var statusLabels = JsonSerializer.Serialize(new[] { "Pago", "Pendente", "Vencido", "Cancelado" }, jsonOptions);
    var statusValues = JsonSerializer.Serialize(new[] { paidAmount, pendingAmount, overdueAmount, 0.0m }, jsonOptions);

    var incomeStatusLabels = JsonSerializer.Serialize(new[] { "Recebido", "Pendente", "Vencido", "Cancelado" }, jsonOptions);
    var incomeStatusValues = JsonSerializer.Serialize(new[] { receivedIncomeAmount, pendingIncomeAmount, overdueIncomeAmount, 0.0m }, jsonOptions);

    // Dados para o gráfico de comparação
    var monthlyComparisonLabels = JsonSerializer.Serialize(new[] { "Receitas", "Despesas" }, jsonOptions);
    var monthlyComparisonIncomeValues = JsonSerializer.Serialize(new decimal[] { totalIncomeAmount }, jsonOptions);
    var monthlyComparisonExpenseValues = JsonSerializer.Serialize(new decimal[] { totalAmount }, jsonOptions);

    ViewData["Title"] = "Relatório Mensal: " + @monthName.ToUpper() + "/" + @currentYear;
}

@section Styles {
    <link rel="stylesheet" href="~/css/pages/payment.css" asp-append-version="true">
    <link rel="stylesheet" href="~/css/pages/income.css" asp-append-version="true">
}

<div class="container-fluid">
    <div class="d-flex justify-content-end mb-3">
        <div>
            <a asp-action="PrintMonthly" asp-route-month="@currentMonth" asp-route-year="@currentYear"
               target="_blank" class="btn btn-sm btn-outline-secondary print-button">
                <i class="fas fa-print me-1"></i> Imprimir Relatório
            </a>
            <a asp-controller="Home" asp-action="Index" class="btn btn-sm btn-secondary">
                <i class="fas fa-arrow-left me-1"></i> Voltar
            </a>
        </div>
    </div>

    <!-- Navegação entre meses -->
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card shadow">
                <div class="card-body py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <a asp-action="Monthly" asp-route-month="@previousMonth" asp-route-year="@previousYear" class="btn btn-sm btn-outline-primary">
                            <i class="fas fa-chevron-left me-1"></i> Mês Anterior
                        </a>

                        <div class="btn-group">
                            <button type="button" class="btn btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                Selecionar Mês
                            </button>
                            <ul class="dropdown-menu">
                                @for (int i = 1; i <= 12; i++)
                                {
                                    var monthText = new DateTime(2022, i, 1).ToString("MMMM");
                                    <li>
                                        <a class="dropdown-item @(i == currentMonth ? "active" : "")"
                                           asp-action="Monthly" asp-route-month="@i" asp-route-year="@currentYear">
                                            @monthText
                                        </a>
                                    </li>
                                }
                            </ul>
                        </div>

                        <div class="btn-group">
                            <button type="button" class="btn btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                Selecionar Ano
                            </button>
                            <ul class="dropdown-menu">
                                @for (int i = DateTime.Now.Year - 2; i <= DateTime.Now.Year + 1; i++)
                                {
                                    <li>
                                        <a class="dropdown-item @(i == currentYear ? "active" : "")"
                                           asp-action="Monthly" asp-route-month="@currentMonth" asp-route-year="@i">
                                            @i
                                        </a>
                                    </li>
                                }
                            </ul>
                        </div>

                        <a asp-action="Monthly" asp-route-month="@nextMonth" asp-route-year="@nextYear" class="btn btn-sm btn-outline-primary">
                            Próximo Mês <i class="fas fa-chevron-right ms-1"></i>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Cards de Resumo para Comparação -->
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card shadow">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Comparativo de Receitas x Despesas</h6>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="chart-pie pt-4 pb-2">
                                <canvas id="monthlyComparisonChart"
                                        data-labels='@Html.Raw(monthlyComparisonLabels)'
                                        data-income-values='@Html.Raw(monthlyComparisonIncomeValues)'
                                        data-payment-values='@Html.Raw(monthlyComparisonExpenseValues)'>
                                </canvas>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="table-responsive">
                                <table class="table table-sm">
                                    <thead>
                                        <tr>
                                            <th>Categoria</th>
                                            <th class="text-end">Valor</th>
                                            <th class="text-end">Saldo</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr class="table-success">
                                            <td>Receitas</td>
                                            <td class="text-end">@string.Format("{0:C2}", totalIncomeAmount)</td>
                                            <td class="text-end"></td>
                                        </tr>
                                        <tr class="table-danger">
                                            <td>Despesas</td>
                                            <td class="text-end">@string.Format("{0:C2}", totalAmount)</td>
                                            <td class="text-end"></td>
                                        </tr>
                                        <tr class="fw-bold @(totalIncomeAmount > totalAmount ? "table-success" : "table-danger")">
                                            <td>Saldo</td>
                                            <td class="text-end"></td>
                                            <td class="text-end">@string.Format("{0:C2}", totalIncomeAmount - totalAmount)</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Cards de Resumo de Despesas -->
    <div class="row mb-4">
        <div class="col-12">
            <h5 class="mb-2">Resumo de Despesas</h5>
        </div>
        <!-- Total -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Total de Despesas
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@string.Format("{0:C2}", totalAmount)</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-calendar fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Pago -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Total Pago
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@string.Format("{0:C2}", paidAmount)</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-check-circle fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Pendente -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                Total Pendente
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@string.Format("{0:C2}", pendingAmount)</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-clock fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Vencido -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-danger shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">
                                Total Vencido
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@string.Format("{0:C2}", overdueAmount)</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-exclamation-triangle fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Cards de Resumo de Receitas -->
    <div class="row mb-4">
        <div class="col-12">
            <h5 class="mb-2">Resumo de Receitas</h5>
        </div>
        <!-- Total -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Total de Receitas
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@string.Format("{0:C2}", totalIncomeAmount)</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Recebido -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                Total Recebido
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@string.Format("{0:C2}", receivedIncomeAmount)</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-check-circle fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Pendente -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                Pendente de Recebimento
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@string.Format("{0:C2}", pendingIncomeAmount)</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-clock fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Vencido -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-danger shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">
                                Vencido Sem Recebimento
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@string.Format("{0:C2}", overdueIncomeAmount)</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-exclamation-triangle fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Gráficos de Despesas -->
    <div class="row">
        <!-- Gráfico de Pagamentos por Tipo -->
        <div class="col-lg-6 mb-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Despesas por Tipo</h6>
                </div>
                <div class="card-body">
                    <div class="chart-pie pt-4 pb-2">
                        <canvas id="paymentTypesPieChart"
                                data-labels='@Html.Raw(typeLabels)'
                                data-values='@Html.Raw(typeValues)'>
                        </canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Gráfico de Status de Pagamentos -->
        <div class="col-lg-6 mb-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Status de Pagamentos</h6>
                </div>
                <div class="card-body">
                    <div class="chart-pie pt-4 pb-2">
                        <canvas id="paymentStatusPieChart"
                                data-labels='@Html.Raw(statusLabels)'
                                data-values='@Html.Raw(statusValues)'>
                        </canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Gráficos de Receitas -->
    <div class="row">
        <!-- Gráfico de Receitas por Tipo -->
        <div class="col-lg-6 mb-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-success">Receitas por Tipo</h6>
                </div>
                <div class="card-body">
                    <div class="chart-pie pt-4 pb-2">
                        <canvas id="incomeTypesPieChart"
                                data-labels='@Html.Raw(incomeTypeLabels)'
                                data-values='@Html.Raw(incomeTypeValues)'>
                        </canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Gráfico de Status de Receitas -->
        <div class="col-lg-6 mb-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-success">Status de Receitas</h6>
                </div>
                <div class="card-body">
                    <div class="chart-pie pt-4 pb-2">
                        <canvas id="incomeStatusPieChart"
                                data-labels='@Html.Raw(incomeStatusLabels)'
                                data-values='@Html.Raw(incomeStatusValues)'>
                        </canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Tabela de Pagamentos -->
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">Pagamentos de @monthName/@currentYear</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover" id="payments-table">
                    <thead>
                        <tr>
                            <th>Descrição</th>
                            <th>Valor</th>
                            <th>Vencimento</th>
                            <th>Status</th>
                            <th>Tipo</th>
                            <th>Método</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var payment in Model)
                        {
                            <tr>
                                <td>@payment.Description</td>
                                <td class="text-end">@payment.GetFormattedAmount()</td>
                                <td class="text-center">@payment.GetFormattedDueDate()</td>
                                <td class="text-center">
                                    <span class="badge @payment.StatusBadgeClass">@payment.StatusDescription</span>
                                </td>
                                <td>@payment.PaymentTypeName</td>
                                <td>@payment.PaymentMethodName</td>
                                <td class="text-center">
                                    <a href="@Url.Action("Details", "Payments", new { id = payment.Id })" class="btn btn-sm btn-info">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Tabela de Receitas -->
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-success">Receitas de @monthName/@currentYear</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover" id="incomes-table">
                    <thead>
                        <tr>
                            <th>Descrição</th>
                            <th>Valor</th>
                            <th>Vencimento</th>
                            <th>Status</th>
                            <th>Tipo</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var income in ViewBag.Incomes as IEnumerable<IncomeModel>)
                        {
                            <tr>
                                <td>@income.Description</td>
                                <td class="text-end">@income.GetFormattedAmount()</td>
                                <td class="text-center">@income.GetFormattedDueDate()</td>
                                <td class="text-center">
                                    <span class="badge @income.StatusBadgeClass">@income.StatusDescription</span>
                                </td>
                                <td>@income.IncomeTypeName</td>
                                <td class="text-center">
                                    <a href="@Url.Action("Details", "Incomes", new { id = income.Id })" class="btn btn-sm btn-info">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetRandomColor()
    {
        var rand = new Random();
        var colors = new[] { "#4e73df", "#1cc88a", "#36b9cc", "#f6c23e", "#e74a3b", "#858796", "#5cb85c", "#d9534f", "#5bc0de", "#f0ad4e" };
        return colors[rand.Next(colors.Length)];
    }
}