@using Equilibrium.Web.Extensions
@using Equilibrium.Web.Helpers
@using Equilibrium.Web.Models.Commons
@using Equilibrium.Web.Models.User
@model IEnumerable<UserModel>

@{
    ViewData["Title"] = "Usuários";
}

@if (await PermissionHelper.HasPermissionAsync(Context, "users.create"))
{
    <p>
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus me-2"></i>Novo Usuário
        </a>
    </p>
}

<div class="card">
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered table-hover datatable">
                <thead>
                    <tr>
                        <th>Nome de Usuário</th>
                        <th>Email</th>
                        <th>Status</th>
                        <th>Perfis</th>
                        <th>Último Login</th>
                        <th>Ações</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.Username</td>
                            <td>@item.Email</td>
                            <td>
                                @if (item.IsActive)
                                {
                                    <span class="badge bg-success">Ativo</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">Inativo</span>
                                }
                            </td>
                            <td>@string.Join(", ", item.Roles)</td>
                            <td>@(item.LastLogin.HasValue ? item.LastLogin.Value.ToString("dd/MM/yyyy HH:mm") : "Nunca")</td>
                            <td>
                                @{
                                    var canEdit = await PermissionHelper.HasPermissionAsync(Context, "users.edit");
                                    var canDelete = await PermissionHelper.HasPermissionAsync(Context, "users.delete") && item.Id != Context.GetCurrentUserId();
                                    var deleteConfig = canDelete ? new DeleteButtonModel(item.Id, "Users", "usuário", item.Username, true) : null;
                                }
                                <partial name="_Partials/Commons/_ActionButtons" model='(
                                        Id: item.Id,
                                        CanView: true,
                                        CanEdit: canEdit,
                                        CanDelete: canDelete,
                                        ControllerName: "Users",
                                        DeleteConfig: deleteConfig,
                                        ExtraButtons: "")' />
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>