@model IEnumerable<IncomeModel>
@using Equilibrium.Web.Helpers
@using Equilibrium.Web.Models.Income
@using Equilibrium.Web.Models.Filters
@using Equilibrium.Web.Models.Commons
@{
    ViewData["Title"] = ViewBag.Title ?? "Receitas";
    var filter = ViewBag.CurrentFilter as IncomeFilter ?? new IncomeFilter();
    var hasActiveFilters = ViewBag.HasActiveFilters ?? false;
}

<div class="container-fluid">
    <div class="d-flex justify-content-end mb-3">
        @if (await PermissionHelper.HasPermissionAsync(Context, "incomes.create"))
        {
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus me-1"></i> Nova Receita
            </a>
        }
    </div>

    <partial name="_Partials/Filters/_IncomeFiltersPartial" model="filter" />

    @if (!Model.Any())
    {
        <partial name="_Partials/Commons/_EmptyState" model='(
            Message: hasActiveFilters ? "Nenhuma receita encontrada com os filtros aplicados." : "Nenhuma receita encontrada.",
            Icon: "fa-money-bill-alt",
            ButtonText: await PermissionHelper.HasPermissionAsync(Context, "incomes.create") ? "Criar Nova Receita" : "",
            ButtonUrl: Url.Action("Create"),
            ButtonIcon: "fa-plus",
            IsAlert: true)' />
    }
    else
    {
        <div class="row">
            <partial name="_Partials/Commons/_MetricCard" model='(
                 Title: "Total de Receitas" ,
                 Value: Model.Sum(i=>
            i.Amount).ToString("C2"),
            Icon: "fa-money-bill-alt",
            Color: "success",
            SubValue: Model.Count() + " receitas",
            ShowProgress: false)' />

                <partial name="_Partials/Commons/_MetricCard" model='(
                     Title: "Total Recebido" ,
                     Value: Model.Where(i=>
                i.Status == 2).Sum(i => i.Amount).ToString("C2"),
                Icon: "fa-check-circle",
                Color: "success",
                SubValue: Model.Count(i => i.Status == 2) + " recebidas",
                ShowProgress: false)' />

                    <partial name="_Partials/Commons/_MetricCard" model='(
                         Title: "Total Pendente" ,
                         Value: Model.Where(i=>
                    i.Status == 1).Sum(i => i.Amount).ToString("C2"),
                    Icon: "fa-clock",
                    Color: "warning",
                    SubValue: Model.Count(i => i.Status == 1) + " pendentes",
                    ShowProgress: false)' />
        </div>

        <div class="card shadow mb-4">
            <partial name="_Partials/Commons/_CardHeader" model='(
                Title: "Suas Receitas",
                BadgeText: hasActiveFilters ? "Filtrado" : "",
                BadgeClass: hasActiveFilters ? "bg-success" : "",
                Icon: "fa-money-bill-alt",
                CollapseTarget: "")' />
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-bordered table-hover datatable">
                        <thead class="bg-light">
                            <tr>
                                <th>Descrição</th>
                                <th class="text-center">Vencimento</th>
                                <th class="text-end">Valor</th>
                                <th class="text-center">Recebimento</th>
                                <th>Tipo</th>
                                <th class="text-center">Status</th>
                                <th class="text-center">Ações</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.OrderBy(e => e.DueDate))
                            {
                                <tr class="@(item.Status == 2 ? "table-success" : item.Status == 3 ? "table-secondary" : "")">
                                    <td>
                                        <a asp-action="Details" asp-route-id="@item.Id" class="text-decoration-none">
                                            <div class="fw-medium">
                                                @if (item.IsRecurring)
                                                {
                                                    <span class="badge bg-info me-2" title="Receita Recorrente">
                                                        <i class="fas fa-sync-alt"></i>
                                                    </span>
                                                }
                                                @item.Description
                                            </div>
                                            <div class="small text-muted">
                                                @(item.Installments.Any() ? $"Parcelado ({item.Installments.Count}x)" : "Receita Única")
                                            </div>
                                        </a>
                                    </td>
                                    <td class="text-center">
                                        @item.GetFormattedDueDate()
                                        @if (item.Status == 1 && item.DueDate < DateTime.Today)
                                        {
                                            <br>

                                            <small class="text-warning">Vencido</small>
                                        }
                                    </td>
                                    <td class="text-end fw-bold text-success">@item.GetFormattedAmount()</td>
                                    <td class="text-center">
                                        @item.GetFormattedReceivedDate()
                                        @if (item.Status == 2 && item.ReceivedDate.HasValue)
                                        {
                                            <br>

                                            <small class="text-success">Recebido</small>
                                        }
                                    </td>
                                    <td>
                                        <small class="text-muted">@item.IncomeTypeName</small>
                                    </td>
                                    <td class="text-center">
                                        <partial name="_Partials/Commons/_StatusBadge" model='(BadgeClass: item.StatusBadgeClass, Description: item.StatusDescription)' />
                                    </td>
                                    <td class="text-center">
                                        <div class="btn-group">
                                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info" title="Visualizar">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            @if (item.Status != 3 && await PermissionHelper.HasPermissionAsync(Context, "incomes.edit"))
                                            {
                                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-primary" title="Editar">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                            }
                                            @if (await PermissionHelper.HasPermissionAsync(Context, "incomes.delete"))
                                            {

                                                var incomeDeleteModel = new DeleteButtonModel(item.Id, "Incomes", "receita", item.Description, true);
                                                incomeDeleteModel.CheckStatus = true;
                                                incomeDeleteModel.StatusField = "Status";
                                                incomeDeleteModel.AllowedStatuses = new[] { "1", "3", "4" };

                                                <partial name="_Partials/Commons/_DeleteButton" model='incomeDeleteModel' />
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        @if (await PermissionHelper.HasPermissionAsync(Context, "incomes.edit"))
        {
            <div class="card shadow mb-4">
                <partial name="_Partials/Commons/_CardHeader" model='(
                    Title: "Ações Rápidas",
                    BadgeText: "",
                    BadgeClass: "",
                    Icon: "fa-bolt",
                    CollapseTarget: "")' />
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3">
                            <a href="@Url.Action("Index", new { status = "Pending", orderBy = "dueDate" })" class="btn btn-warning w-100">
                                <i class="fas fa-clock me-1"></i>
                                Ver Pendentes (@Model.Count(i => i.Status == 1))
                            </a>
                        </div>
                        <div class="col-md-3">
                            <a href="@Url.Action("Index", new { status = "Received", orderBy = "receivedDate", ascending = false })" class="btn btn-success w-100">
                                <i class="fas fa-check-circle me-1"></i>
                                Ver Recebidas (@Model.Count(i => i.Status == 2))
                            </a>
                        </div>
                        <div class="col-md-3">
                            <a href="@Url.Action("Index", new { month = DateTime.Now.Month, year = DateTime.Now.Year })" class="btn btn-info w-100">
                                <i class="fas fa-calendar-alt me-1"></i>
                                Este Mês
                            </a>
                        </div>
                        <div class="col-md-3">
                            <a asp-action="Export" class="btn btn-secondary w-100">
                                <i class="fas fa-file-export me-1"></i>
                                Exportar
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
</div>