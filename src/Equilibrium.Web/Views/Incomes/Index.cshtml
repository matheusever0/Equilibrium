@model IEnumerable<IncomeModel>
@using Equilibrium.Web.Helpers
@using Equilibrium.Web.Models.Income
@{
    ViewData["Title"] = ViewBag.Title ?? "Receitas";
}

<div class="container-fluid">
    <div class="d-flex justify-content-end mb-3">
        @if (await PermissionHelper.HasPermissionAsync(Context, "incomes.create"))
        {
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus me-1"></i> Nova Receita
            </a>
        }
    </div>

    <div class="card shadow mb-4">
        <partial name="_Partials/Commons/_CardHeader" model='(
            Title: "Filtros", 
            BadgeText: "", 
            BadgeClass: "", 
            Icon: "fa-filter", 
            CollapseTarget: "collapseFilters")' />
        <div class="card-body collapse show" id="collapseFilters">
            <div class="row">
                <div class="col-12 mb-3">
                    <div class="d-flex flex-wrap gap-2">
                        <a asp-action="Index" class="btn btn-outline-primary btn-sm @(ViewContext.RouteData.Values["action"].ToString() == "Index" && ViewBag.Title == null ? "active" : "")">
                            <i class="fas fa-list"></i> Todas
                        </a>
                        <a asp-action="Pending" class="btn btn-outline-warning btn-sm @(ViewContext.RouteData.Values["action"].ToString() == "Pending" ? "active" : "")">
                            <i class="fas fa-clock"></i> Pendentes
                        </a>
                        <a asp-action="Received" class="btn btn-outline-success btn-sm @(ViewContext.RouteData.Values["action"].ToString() == "Received" ? "active" : "")">
                            <i class="fas fa-check-circle"></i> Recebidas
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (!Model.Any())
    {
        <partial name="_Partials/Commons/_EmptyState" model='(
            Message: "Nenhuma receita encontrada.", 
            Icon: "fa-money-bill-alt", 
            ButtonText: await PermissionHelper.HasPermissionAsync(Context, "incomes.create") ? "Criar Nova Receita" : "", 
            ButtonUrl: Url.Action("Create"), 
            ButtonIcon: "fa-plus", 
            IsAlert: true)' />
    }
    else
    {
        <div class="row">
            <partial name="_Partials/Commons/_MetricCard" model='(
                Title: "Total de Receitas", 
                Value: Model.Sum(i => i.Amount).ToString("C2"), 
                Icon: "fa-money-bill-alt", 
                Color: "primary", 
                SubValue: Model.Count() + " receitas", 
                ShowProgress: false)' />
                
            <partial name="_Partials/Commons/_MetricCard" model='(
                Title: "Total Recebido", 
                Value: Model.Where(i => i.Status == 2).Sum(i => i.Amount).ToString("C2"), 
                Icon: "fa-check-circle", 
                Color: "success", 
                SubValue: Model.Count(i => i.Status == 2) + " recebidas", 
                ShowProgress: false)' />
                
            <partial name="_Partials/Commons/_MetricCard" model='(
                Title: "Total Pendente", 
                Value: Model.Where(i => i.Status == 1).Sum(i => i.Amount).ToString("C2"), 
                Icon: "fa-clock", 
                Color: "warning", 
                SubValue: Model.Count(i => i.Status == 1) + " pendentes", 
                ShowProgress: false)' />
        </div>

        <div class="card shadow mb-4">
            <partial name="_Partials/Commons/_CardHeader" model='(
                Title: "Suas Receitas", 
                BadgeText: "", 
                BadgeClass: "", 
                Icon: "fa-money-bill-alt", 
                CollapseTarget: "")' />
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-bordered table-hover datatable">
                        <thead class="bg-light">
                            <tr>
                                <th>Descrição</th>
                                <th class="text-center">Valor</th>
                                <th class="text-center">Vencimento</th>
                                <th class="text-center">Data de Recebimento</th>
                                <th>Tipo</th>
                                <th class="text-center">Status</th>
                                <th class="text-center">Ações</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        <a asp-action="Details" asp-route-id="@item.Id">
                                            @item.Description
                                            @if (item.IsRecurring)
                                            {
                                                <span class="badge bg-info me-2" title="Receita Recorrente">
                                                    <i class="fas fa-sync-alt"></i>
                                                </span>
                                            }
                                        </a>
                                    </td>
                                    <td class="text-end">@item.GetFormattedAmount()</td>
                                    <td class="text-center">@item.GetFormattedDueDate()</td>
                                    <td class="text-center">@item.GetFormattedReceivedDate()</td>
                                    <td>@item.IncomeTypeName</td>
                                    <td class="text-center">
                                        <partial name="_Partials/Commons/_StatusBadge" model='(BadgeClass: item.StatusBadgeClass, Description: item.StatusDescription)' />
                                    </td>
                                    <td class="text-center">
                                        <partial name="_Partials/Commons/_ActionButtons" model='(
                                            Id: item.Id,
                                            CanView: true,
                                            CanEdit: (item.Status != 3 && await PermissionHelper.HasPermissionAsync(Context, "incomes.edit")),
                                            CanDelete: (item.Status != 3 && await PermissionHelper.HasPermissionAsync(Context, "incomes.delete")),
                                            ControllerName: "Incomes")' />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>