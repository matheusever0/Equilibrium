@model IEnumerable<IncomeModel>
@using Equilibrium.Web.Helpers
@using Equilibrium.Web.Models.Income
@{
    ViewData["Title"] = ViewBag.Title ?? "Receitas";
}

<div class="container-fluid">
    <div class="d-flex justify-content-end mb-3">
        @if (await PermissionHelper.HasPermissionAsync(Context, "incomes.create"))
        {
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus me-1"></i> Nova Receita
            </a>
        }
    </div>

    <div class="card shadow mb-4">
        <partial name="_Partials/_CardHeader" model='(Title: "Filtros", BadgeText: "", BadgeClass: "")' />
        <div class="card-body collapse show" id="collapseFilters">
            <div class="row">
                <div class="col-12 mb-3">
                    <div class="d-flex flex-wrap gap-2">
                        <a asp-action="Index" class="btn btn-outline-primary btn-sm @(ViewContext.RouteData.Values["action"].ToString() == "Index" && ViewBag.Title == null ? "active" : "")">
                            <i class="fas fa-list"></i> Todas
                        </a>
                        <a asp-action="Pending" class="btn btn-outline-warning btn-sm @(ViewContext.RouteData.Values["action"].ToString() == "Pending" ? "active" : "")">
                            <i class="fas fa-clock"></i> Pendentes
                        </a>
                        <a asp-action="Received" class="btn btn-outline-success btn-sm @(ViewContext.RouteData.Values["action"].ToString() == "Received" ? "active" : "")">
                            <i class="fas fa-check-circle"></i> Recebidas
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            <i class="fas fa-info-circle me-2"></i> Nenhuma receita encontrada.
        </div>
    }
    else
    {
        <div class="card shadow mb-4">
            <partial name="_Partials/_CardHeader" model='(Title: "Suas Receitas", BadgeText: "", BadgeClass: "")' />
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-bordered table-hover datatable">
                        <thead class="bg-light">
                            <tr>
                                <th>Descrição</th>
                                <th class="text-center">Valor</th>
                                <th class="text-center">Vencimento</th>
                                <th class="text-center">Data de Recebimento</th>
                                <th>Tipo</th>
                                <th class="text-center">Status</th>
                                <th class="text-center">Ações</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        <a asp-action="Details" asp-route-id="@item.Id">
                                            @item.Description
                                            @if (item.IsRecurring)
                                            {
                                                <span class="badge bg-info ms-1">Recorrente</span>
                                            }
                                        </a>
                                    </td>
                                    <td class="text-end">@item.GetFormattedAmount()</td>
                                    <td class="text-center">@item.GetFormattedDueDate()</td>
                                    <td class="text-center">@item.GetFormattedReceivedDate()</td>
                                    <td>@item.IncomeTypeName</td>
                                    <td class="text-center">
                                        <partial name="_Partials/_StatusBadge" model='(BadgeClass: item.StatusBadgeClass, Description: item.StatusDescription)' />
                                    </td>
                                    <td class="text-center">
                                        <partial name="_Partials/_ActionButtons" model='(Id: item.Id, CanView: true, CanEdit: (item.Status != 3 && await PermissionHelper.HasPermissionAsync(Context, "incomes.edit")), CanDelete: (item.Status != 3 && await PermissionHelper.HasPermissionAsync(Context, "incomes.delete")), ControllerName: "Incomes")' />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>