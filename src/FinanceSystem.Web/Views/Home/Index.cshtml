@using FinanceSystem.Web.Helpers
@{
    ViewData["Title"] = "Home";

    // Dados do dashboard
    var paymentsPending = ViewBag.PaymentsPending as IEnumerable<FinanceSystem.Web.Models.PaymentModel> ?? new List<FinanceSystem.Web.Models.PaymentModel>();
    var paymentsOverdue = ViewBag.PaymentsOverdue as IEnumerable<FinanceSystem.Web.Models.PaymentModel> ?? new List<FinanceSystem.Web.Models.PaymentModel>();
    var totalPendingAmount = paymentsPending.Sum(p => p.Amount);
    var totalOverdueAmount = paymentsOverdue.Sum(p => p.Amount);
    var totalBalance = ViewBag.TotalBalance ?? 0m;

    // Dados dos cartões de crédito
    var creditCards = ViewBag.CreditCards as IEnumerable<FinanceSystem.Web.Models.CreditCardModel> ?? new List<FinanceSystem.Web.Models.CreditCardModel>();

    // Dados para o gráfico mensal
    var monthlyData = ViewBag.MonthlyData as Dictionary<string, decimal> ?? new Dictionary<string, decimal>();
}

<div class="container-fluid">
    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Dashboard Financeiro</h1>
        <a href="#" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm">
            <i class="fas fa-download fa-sm text-white-50"></i> Gerar Relatório
        </a>
    </div>

    <!-- Cards de Resumo -->
    <div class="row">
        <!-- Saldo Total -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Saldo Atual
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@string.Format("{0:C2}", totalBalance)</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-calendar fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Pendente -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                Pendente
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@string.Format("{0:C2}", totalPendingAmount)</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-clock fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Vencido -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-danger shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">
                                Vencido
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@string.Format("{0:C2}", totalOverdueAmount)</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-exclamation-triangle fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Cartões de Crédito -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                Cartões de Crédito
                            </div>
                            <div class="row no-gutters align-items-center">
                                <div class="col-auto">
                                    <div class="h5 mb-0 mr-3 font-weight-bold text-gray-800">@creditCards.Count()</div>
                                </div>
                                <div class="col">
                                    <div class="progress progress-sm mr-2">
                                        <div class="progress-bar bg-info" role="progressbar"
                                             style="width: @(creditCards.Any() ? 100 : 0)%" aria-valuenow="@(creditCards.Any() ? 100 : 0)" aria-valuemin="0"
                                             aria-valuemax="100"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-credit-card fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="row mb-4">
        <div class="col-lg-12">
            <div class="card shadow">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Ações Rápidas</h6>
                </div>
                <div class="card-body">
                    <div class="row justify-content-center">
                        @if (await PermissionHelper.HasPermissionAsync(Context, "payments.create"))
                        {
                            <div class="col-xl-3 col-md-6 mb-2">
                                <a asp-controller="Payments" asp-action="Create" class="btn btn-primary btn-icon-split btn-lg w-100">
                                    <span class="icon text-white-50">
                                        <i class="fas fa-plus"></i>
                                    </span>
                                    <span class="text">Novo Pagamento</span>
                                </a>
                            </div>
                        }

                        @if (await PermissionHelper.HasPermissionAsync(Context, "creditcards.view"))
                        {
                            <div class="col-xl-3 col-md-6 mb-2">
                                <a asp-controller="CreditCards" asp-action="Index" class="btn btn-info btn-icon-split btn-lg w-100">
                                    <span class="icon text-white-50">
                                        <i class="fas fa-credit-card"></i>
                                    </span>
                                    <span class="text">Meus Cartões</span>
                                </a>
                            </div>
                        }

                        @if (await PermissionHelper.HasPermissionAsync(Context, "payments.view"))
                        {
                            <div class="col-xl-3 col-md-6 mb-2">
                                <a asp-controller="Payments" asp-action="Pending" class="btn btn-warning btn-icon-split btn-lg w-100">
                                    <span class="icon text-white-50">
                                        <i class="fas fa-clock"></i>
                                    </span>
                                    <span class="text">Pagamentos Pendentes</span>
                                </a>
                            </div>
                        }

                        @if (await PermissionHelper.HasPermissionAsync(Context, "payments.view"))
                        {
                            <div class="col-xl-3 col-md-6 mb-2">
                                <a asp-controller="Payments" asp-action="ByMonth"
                                   asp-route-month="@DateTime.Now.Month"
                                   asp-route-year="@DateTime.Now.Year"
                                   class="btn btn-success btn-icon-split btn-lg w-100">
                                    <span class="icon text-white-50">
                                        <i class="fas fa-calendar"></i>
                                    </span>
                                    <span class="text">Este Mês</span>
                                </a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Configuração do gráfico de gastos mensais
            const monthlyLabels = @Html.Raw(Json.Serialize(monthlyData.Keys));
            const monthlyValues = @Html.Raw(Json.Serialize(monthlyData.Values));

            const ctx = document.getElementById('monthlyExpensesChart').getContext('2d');
            const myChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: monthlyLabels,
                    datasets: [{
                        label: 'Gastos Mensais',
                        data: monthlyValues,
                        borderColor: '#4e73df',
                        backgroundColor: 'rgba(78, 115, 223, 0.05)',
                        fill: true,
                        lineTension: 0.3,
                        pointRadius: 3,
                        pointBackgroundColor: '#4e73df',
                        pointBorderColor: '#4e73df',
                        pointHoverRadius: 3,
                        pointHoverBackgroundColor: '#4e73df',
                        pointHoverBorderColor: '#4e73df',
                        pointHitRadius: 10,
                        pointBorderWidth: 2
                    }]
                },
                options: {
                    maintainAspectRatio: false,
                    layout: {
                        padding: {
                            left: 10,
                            right: 25,
                            top: 25,
                            bottom: 0
                        }
                    },
                    scales: {
                        x: {
                            grid: {
                                display: false,
                                drawBorder: false
                            }
                        },
                        y: {
                            ticks: {
                                callback: function(value) {
                                    return 'R$ ' + value.toLocaleString('pt-BR');
                                }
                            },
                            grid: {
                                color: "rgb(234, 236, 244)",
                                zeroLineColor: "rgb(234, 236, 244)",
                                drawBorder: false,
                                borderDash: [2],
                                zeroLineBorderDash: [2]
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return 'R$ ' + context.raw.toLocaleString('pt-BR', { minimumFractionDigits: 2 });
                                }
                            }
                        }
                    }
                }
            });
        });
    </script>
}