@using FinanceSystem.Web.Helpers
@model FinanceSystem.Web.Models.Income.IncomeModel
@{
    ViewData["Title"] = "Detalhes da Receita";
}

@section Styles {
    <link rel="stylesheet" href="~/css/pages/income.css" asp-append-version="true">
}


<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">@ViewData["Title"]</h1>
    <div>
        @if (await PermissionHelper.HasPermissionAsync(Context, "incomes.edit"))
        {
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-sm btn-primary">
                <i class="fas fa-edit"></i> Editar
            </a>
        }
        <a asp-action="Index" class="btn btn-sm btn-secondary">
            <i class="fas fa-arrow-left"></i> Voltar
        </a>
    </div>
</div>

<div class="row">
    <div class="col-lg-8">
        <div class="card shadow mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Informações da Receita</h6>
                <span class="badge @Model.StatusBadgeClass">@Model.StatusDescription</span>
            </div>
            <div class="card-body">
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="financial-data">
                            <div class="label">Descrição</div>
                            <div class="value">@Model.Description</div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="financial-data">
                            <div class="label">Valor</div>
                            <div class="value">@Model.GetFormattedAmount()</div>
                        </div>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="financial-data">
                            <div class="label">Data de Vencimento</div>
                            <div class="value">@Model.GetFormattedDueDate()</div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="financial-data">
                            <div class="label">Data de Recebimento</div>
                            <div class="value">@Model.GetFormattedReceivedDate()</div>
                        </div>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="financial-data">
                            <div class="label">Tipo de Receita</div>
                            <div class="value">@Model.IncomeTypeName</div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="financial-data">
                            <div class="label">Recorrente</div>
                            <div class="value">
                                @if (Model.IsRecurring)
                                {
                                    <span class="text-success"><i class="fas fa-check-circle"></i> Sim</span>
                                }
                                else
                                {
                                    <span class="text-secondary"><i class="fas fa-times-circle"></i> Não</span>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(Model.Notes))
                {
                    <div class="row mb-3">
                        <div class="col-12">
                            <div class="financial-data">
                                <div class="label">Observações</div>
                                <div class="value">@Model.Notes</div>
                            </div>
                        </div>
                    </div>
                }

                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="financial-data">
                            <div class="label">Data de Criação</div>
                            <div class="value">@Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")</div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="financial-data">
                            <div class="label">Última Atualização</div>
                            <div class="value">
                                @(Model.UpdatedAt?.ToString("dd/MM/yyyy HH:mm") ?? "Sem atualizações")
                            </div>
                        </div>
                    </div>
                </div>

                @if (Model.Status == 1) // Pendente
                {
                    <hr />
                    <div class="row">
                        <div class="col-md-6">
                            @if (await PermissionHelper.HasPermissionAsync(Context, "incomes.edit"))
                            {
                                <form asp-controller="Incomes" asp-action="MarkAsReceived" asp-route-id="@Model.Id" method="post" data-page="income">
                                    <button type="button" class="btn btn-success btn-block" data-bs-toggle="modal" data-bs-target="#markReceivedModal">
                                        <i class="fas fa-check"></i> Marcar como Recebido
                                    </button>
                                </form>
                            }
                        </div>
                        <div class="col-md-6">
                            @if (await PermissionHelper.HasPermissionAsync(Context, "incomes.edit"))
                            {
                                <form asp-controller="Incomes" asp-action="Cancel" asp-route-id="@Model.Id" method="post" onsubmit="return confirm('Tem certeza que deseja cancelar esta receita?');" data-page="income">
                                    <button type="submit" class="btn btn-danger btn-block">
                                        <i class="fas fa-ban"></i> Cancelar Receita
                                    </button>
                                </form>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="col-lg-4">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Detalhes</h6>
            </div>
            <div class="card-body">
                <div class="text-center">
                    <div class="mb-3">
                        @if (Model.Status == 1) // Pendente
                        {
                            <div class="display-4 text-warning"><i class="fas fa-clock"></i></div>
                            <div class="mt-2 font-weight-bold">Pendente</div>
                        }
                        else if (Model.Status == 2) // Recebido
                        {
                            <div class="display-4 text-success"><i class="fas fa-check-circle"></i></div>
                            <div class="mt-2 font-weight-bold">Recebido</div>
                        }
                        else if (Model.Status == 3) // Cancelado
                        {
                            <div class="display-4 text-secondary"><i class="fas fa-ban"></i></div>
                            <div class="mt-2 font-weight-bold">Cancelado</div>
                        }
                    </div>

                    @if (Model.Status == 1) // Pendente
                    {
                        <div class="mb-3">
                            @{
                                var daysUntilDue = (int)Math.Ceiling((Model.DueDate - DateTime.Now).TotalDays);
                            }
                            @if (daysUntilDue > 0)
                            {
                                <div class="text-warning">
                                    <i class="fas fa-calendar-day"></i> Vence em @daysUntilDue dias
                                </div>
                            }
                            else if (daysUntilDue == 0)
                            {
                                <div class="text-danger">
                                    <i class="fas fa-exclamation-circle"></i> Vence hoje
                                </div>
                            }
                            else
                            {
                                <div class="text-danger">
                                    <i class="fas fa-exclamation-triangle"></i> Vencido há @Math.Abs(daysUntilDue) dias
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>

        @if (Model.Installments != null && Model.Installments.Any())
        {
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Parcelas</h6>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-sm table-bordered">
                            <thead class="bg-light">
                                <tr>
                                    <th>Nº</th>
                                    <th>Valor</th>
                                    <th>Vencimento</th>
                                    <th>Status</th>
                                    <th>Ações</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var installment in Model.Installments.OrderBy(i => i.InstallmentNumber))
                                {
                                    <tr>
                                        <td class="text-center">@installment.InstallmentNumber</td>
                                        <td class="text-end">@installment.GetFormattedAmount()</td>
                                        <td class="text-center">@installment.GetFormattedDueDate()</td>
                                        <td class="text-center">
                                            <span class="badge @installment.StatusBadgeClass">@installment.StatusDescription</span>
                                        </td>
                                        <td class="text-center">
                                            @if (installment.Status == 1 && await PermissionHelper.HasPermissionAsync(Context, "incomes.edit")) // Pendente
                                            {
                                                <div class="btn-group btn-group-sm">
                                                    <button type="button" class="btn btn-success mark-received-installment"
                                                            data-installment-id="@installment.Id"
                                                            data-bs-toggle="modal"
                                                            data-bs-target="#markInstallmentReceivedModal"
                                                            data-action="received">
                                                        <i class="fas fa-check"></i>
                                                    </button>
                                                    <form asp-controller="IncomeInstallments" asp-action="Cancel" asp-route-id="@installment.Id" method="post" onsubmit="return confirm('Tem certeza que deseja cancelar esta parcela?');" data-page="income">
                                                        @{
                                                            TempData["IncomeId"] = Model.Id;
                                                        }
                                                        <button type="submit" class="btn btn-danger" title="Cancelar">
                                                            <i class="fas fa-ban"></i>
                                                        </button>
                                                    </form>
                                                </div>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Modal para marcar receita como recebida -->
<div class="modal fade" id="markReceivedModal" tabindex="-1" aria-labelledby="markReceivedModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-controller="Incomes" asp-action="MarkAsReceived" asp-route-id="@Model.Id" method="post" data-page="income">
                <div class="modal-header">
                    <h5 class="modal-title" id="markReceivedModalLabel">Marcar Receita como Recebida</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="receivedDate">Data de Recebimento</label>
                        <input type="date" class="form-control" id="receivedDate" name="receivedDate" value="@DateTime.Now.ToString("yyyy-MM-dd")">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-success">Confirmar</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal para marcar parcela como recebida -->
<div class="modal fade" id="markInstallmentReceivedModal" tabindex="-1" aria-labelledby="markInstallmentReceivedModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="markInstallmentReceivedForm" asp-controller="IncomeInstallments" asp-action="MarkAsReceived" method="post" data-page="income">
                <input type="hidden" id="installmentId" name="id" value="">
                @{
                    TempData["IncomeId"] = Model.Id;
                }
                <div class="modal-header">
                    <h5 class="modal-title" id="markInstallmentReceivedModalLabel">Marcar Parcela como Recebida</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="installmentReceivedDate">Data de Recebimento</label>
                        <input type="date" class="form-control" id="installmentReceivedDate" name="receivedDate" value="@DateTime.Now.ToString("yyyy-MM-dd")">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-success">Confirmar</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Inicializar botões de marcar parcela como recebida
            const markReceivedButtons = document.querySelectorAll('.mark-received-installment');
            markReceivedButtons.forEach(button => {
                button.addEventListener('click', function () {
                    const installmentId = this.getAttribute('data-installment-id');
                    document.getElementById('installmentId').value = installmentId;
                });
            });
        });
    </script>

    <script src="~/js/utils/helpers.js" asp-append-version="true"></script>
    <script src="~/js/components/financial.js" asp-append-version="true"></script>
    <script src="~/js/pages/financial-item.js" asp-append-version="true"></script>
}