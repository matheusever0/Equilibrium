@using FinanceSystem.Web.Helpers
@using FinanceSystem.Web.Models.Investment
@model InvestmentModel

@{
    ViewData["Title"] = "Detalhes do Investimento: " + @Model.Symbol + " - " + @Model.Name;
}

<div class="d-flex justify-content-end mb-3">
    <div>
        @if (await PermissionHelper.HasPermissionAsync(Context, "investments.edit"))
        {
            <form asp-action="RefreshPrice" method="post" class="d-inline">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.Id" />
                <button type="submit" class="btn btn-info">
                    <i class="fas fa-sync-alt me-1"></i>Atualizar Preço
                </button>
            </form>
        }
        <a asp-action="Index" class="btn btn-secondary">
            <i class="fas fa-arrow-left me-1"></i>Voltar
        </a>
    </div>
</div>

<div class="row">
    <div class="col-lg-6">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Dados do Investimento</h6>
            </div>
            <div class="card-body">
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="financial-data">
                            <div class="label">Símbolo</div>
                            <div class="value">@Model.Symbol</div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="financial-data">
                            <div class="label">Tipo</div>
                            <div class="value">
                                @{
                                    var typeDescription = Model.Type switch
                                    {
                                        1 => "Ações",
                                        2 => "Fundos Imobiliários",
                                        3 => "ETFs",
                                        4 => "Ações Estrangeiras",
                                        5 => "Renda Fixa",
                                        _ => "Não Categorizado"
                                    };
                                }
                                @typeDescription
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="financial-data">
                            <div class="label">Quantidade Total</div>
                            <div class="value">@Model.TotalQuantity.ToString("N2")</div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="financial-data">
                            <div class="label">Preço Médio</div>
                            <div class="value">@string.Format("{0:C2}", Model.AveragePrice)</div>
                        </div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="financial-data">
                            <div class="label">Preço Atual</div>
                            <div class="value">@string.Format("{0:C2}", Model.CurrentPrice)</div>
                            <div class="secondary">Última atualização: @Model.LastUpdate.ToString("dd/MM/yyyy HH:mm")</div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="financial-data">
                            <div class="label">Total Investido</div>
                            <div class="value">@string.Format("{0:C2}", Model.TotalInvested)</div>
                        </div>
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="financial-data">
                            <div class="label">Valor Atual</div>
                            <div class="value">@string.Format("{0:C2}", Model.CurrentTotal)</div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="financial-data">
                            <div class="label">Ganho/Perda</div>
                            <div class="value @(Model.GainLossPercentage > 0 ? "text-success" : Model.GainLossPercentage < 0 ? "text-danger" : "text-muted")">
                                @if (Model.GainLossPercentage > 0)
                                {
                                    <i class="fas fa-arrow-up me-1"></i>
                                }
                                else if (Model.GainLossPercentage < 0)
                                {
                                    <i class="fas fa-arrow-down me-1"></i>
                                }
                                @string.Format("{0:C2}", Model.GainLossValue) (@Model.GainLossPercentage.ToString("N2")%)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Desempenho</h6>
            </div>
            <div class="card-body">
                <div class="performance-chart-container">
                    <canvas id="performanceChart" height="300" data-investment-id="@Model.Id"></canvas>
                </div>
                <div class="mt-3 text-center text-muted">
                    <small>Gráfico de desempenho baseado nas transações e preços atualizados.</small>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="card shadow mb-4">
    <div class="card-header py-3 d-flex justify-content-between align-items-center">
        <h6 class="m-0 font-weight-bold text-primary">Histórico de Transações</h6>
        @if (await PermissionHelper.HasPermissionAsync(Context, "investments.transactions.create"))
        {
            <a asp-controller="InvestmentTransactions" asp-action="Create" asp-route-investmentId="@Model.Id" class="btn btn-sm btn-primary">
                <i class="fas fa-plus me-1"></i>Nova Transação
            </a>
        }
    </div>
    <div class="card-body">
        @if (!Model.Transactions.Any())
        {
            <div class="text-center my-4">
                <i class="fas fa-exchange-alt fa-3x text-muted mb-3"></i>
                <p>Nenhuma transação registrada para este investimento.</p>
                @if (await PermissionHelper.HasPermissionAsync(Context, "investments.transactions.create"))
                {
                    <a asp-controller="InvestmentTransactions" asp-action="Create" asp-route-investmentId="@Model.Id" class="btn btn-primary mt-2">
                        <i class="fas fa-plus me-1"></i>Registrar primeira transação
                    </a>
                }
            </div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="bg-light">
                        <tr>
                            <th>Data</th>
                            <th>Tipo</th>
                            <th class="text-center">Quantidade</th>
                            <th class="text-center">Preço</th>
                            <th class="text-center">Taxas</th>
                            <th class="text-center">Total</th>
                            <th>Corretora</th>
                            <th>Observações</th>
                            <th class="text-center">Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var transaction in Model.Transactions.OrderByDescending(t => t.Date))
                        {
                            <tr>
                                <td>@transaction.Date.ToString("dd/MM/yyyy")</td>
                                <td>
                                    @{
                                        var transactionType = transaction.Type switch
                                        {
                                            1 => "Compra",
                                            2 => "Venda",
                                            3 => "Dividendo",
                                            4 => "Split",
                                            5 => "Bonificação",
                                            6 => "JCP",
                                            7 => "Rendimento",
                                            _ => "Outros"
                                        };
                                    }
                                    @transactionType
                                </td>
                                <td class="text-center">@transaction.Quantity.ToString("N2")</td>
                                <td class="text-center">@string.Format("{0:C2}", transaction.Price)</td>
                                <td class="text-center">@string.Format("{0:C2}", transaction.Taxes)</td>
                                <td class="text-center">@string.Format("{0:C2}", transaction.TotalValue)</td>
                                <td>@transaction.Broker</td>
                                <td>@transaction.Notes</td>
                                <td class="text-center">
                                    @if (await PermissionHelper.HasPermissionAsync(Context, "investments.transactions.delete"))
                                    {
                                        <form asp-controller="InvestmentTransactions" asp-action="Delete" method="post" class="d-inline"
                                              onsubmit="return confirm('Tem certeza que deseja excluir esta transação? Esta ação afetará o cálculo do preço médio e não pode ser desfeita.');">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="id" value="@transaction.Id" />
                                            <input type="hidden" name="investmentId" value="@Model.Id" />
                                            <button type="submit" class="btn btn-sm btn-danger">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </form>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="~/lib/chart.js/chart.min.js"></script>
    <script src="~/js/pages/investment-details.js" asp-append-version="true"></script>
}
